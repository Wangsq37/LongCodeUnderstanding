[
  {
    "command": "pytest --ignore=tests/io/jdftx",
    "success": false,
    "stdout": "\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [  2%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [  4%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [  7%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [  9%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33m [ 11%]\n\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 14%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 16%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 19%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 21%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 23%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 26%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 28%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 30%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 33%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 35%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 38%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 40%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 42%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[31m [ 45%]\n\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 47%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 50%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 52%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 54%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 57%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 59%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 61%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 64%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 66%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 69%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 71%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 73%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 76%]\n\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 78%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 80%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 83%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 85%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 88%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 90%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 92%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m [ 95%]\n\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 97%]\n\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [100%]\u001b[0m\n=================================== FAILURES ===================================\n\u001b[31m\u001b[1m__ test_get_protostructure_label_from_moyopy[structure0-AB_cF8_225_a_b:Cl-Na] __\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 2.8284271247461903 2.8284271247461903 2.8284271247461903\n angles : 60.000000000000... pbc : True True True\nPeriodicSite: Na (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: Cl (2.0, 2.0, 2.0) [0.5, 0.5, 0.5]\nexpected = 'AB_cF8_225_a_b:Cl-Na'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 2.8284271247461903 2.8284271247461903 2.8284271247461903\n angles : 60.000000000000... pbc : True True True\nPeriodicSite: Na (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: Cl (2.0, 2.0, 2.0) [0.5, 0.5, 0.5]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m__ test_get_protostructure_label_from_moyopy[structure1-AB_cP2_221_a_b:Cl-Cs] __\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 4.0 4.0 4.0\n angles : 90.0 90.0 90.0\n volume : 64.0\n      A : np.float64(4.0) np.f... pbc : True True True\nPeriodicSite: Cs (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: Cl (2.0, 2.0, 2.0) [0.5, 0.5, 0.5]\nexpected = 'AB_cP2_221_a_b:Cl-Cs'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 4.0 4.0 4.0\n angles : 90.0 90.0 90.0\n volume : 64.0\n      A : np.float64(4.0) np.f... pbc : True True True\nPeriodicSite: Cs (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: Cl (2.0, 2.0, 2.0) [0.5, 0.5, 0.5]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m__ test_get_protostructure_label_from_moyopy[structure2-AB_cF8_216_a_c:O-Zn] ___\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 2.8284271247461903 2.8284271247461903 2.8284271247461903\n angles : 60.000000000000...bc : True True True\nPeriodicSite: Zn (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: O (1.0, 1.0, 1.0) [0.25, 0.25, 0.25]\nexpected = 'AB_cF8_216_a_c:O-Zn'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 2.8284271247461903 2.8284271247461903 2.8284271247461903\n angles : 60.000000000000...bc : True True True\nPeriodicSite: Zn (0.0, 0.0, 0.0) [0.0, 0.0, 0.0]\nPeriodicSite: O (1.0, 1.0, 1.0) [0.25, 0.25, 0.25]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m__ test_get_protostructure_label_from_moyopy[structure3-AB_hP4_186_b_b:O-Zn] ___\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 3.8227 3.8227 6.2607\n angles : 90.0 90.0 119.99999999999999\n volume : 79.230784951...cSite: Zn (1.911, 1.104, 3.13) [0.6667, 0.3333, 0.5]\nPeriodicSite: O (6.661e-16, 2.207, 5.477) [0.3333, 0.6667, 0.8748]\nexpected = 'AB_hP4_186_b_b:O-Zn'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 3.8227 3.8227 6.2607\n angles : 90.0 90.0 119.99999999999999\n volume : 79.230784951...cSite: Zn (1.911, 1.104, 3.13) [0.6667, 0.3333, 0.5]\nPeriodicSite: O (6.661e-16, 2.207, 5.477) [0.3333, 0.6667, 0.8748]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m_ test_get_protostructure_label_from_moyopy[structure4-A3BC_cP5_221_c_a_b:O-Sr-Ti] _\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 3.9 3.9 3.9\n angles : 90.0 90.0 90.0\n volume : 59.318999999999996\n      A : np.flo....0) [0.5, 0.5, 0.0]\nPeriodicSite: O (1.95, 0.0, 1.95) [0.5, 0.0, 0.5]\nPeriodicSite: O (0.0, 1.95, 1.95) [0.0, 0.5, 0.5]\nexpected = 'A3BC_cP5_221_c_a_b:O-Sr-Ti'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 3.9 3.9 3.9\n angles : 90.0 90.0 90.0\n volume : 59.318999999999996\n      A : np.flo....0) [0.5, 0.5, 0.0]\nPeriodicSite: O (1.95, 0.0, 1.95) [0.5, 0.0, 0.5]\nPeriodicSite: O (0.0, 1.95, 1.95) [0.0, 0.5, 0.5]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m_ test_get_protostructure_label_from_moyopy[structure5-AB3_tP4_115_a_cg:Al-Fe] _\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 5.76 5.76 5.76\n angles : 90.0 90.0 90.0\n volume : 191.10297599999998\n      A : np...., 0.75, 0.75]\nPeriodicSite: Fe (2.88, 0.0, 2.88) [0.5, 0.0, 0.5]\nPeriodicSite: Fe (4.32, 1.44, 4.32) [0.75, 0.25, 0.75]\nexpected = 'AB3_tP4_115_a_cg:Al-Fe'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 5.76 5.76 5.76\n angles : 90.0 90.0 90.0\n volume : 191.10297599999998\n      A : np...., 0.75, 0.75]\nPeriodicSite: Fe (2.88, 0.0, 2.88) [0.5, 0.0, 0.5]\nPeriodicSite: Fe (4.32, 1.44, 4.32) [0.75, 0.25, 0.75]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m_ test_get_protostructure_label_from_moyopy[structure6-ABC6D2_mC40_15_e_e_3f_f:Ca-Fe-O-Si] _\u001b[0m\n\nstructure = Structure Summary\nLattice\n    abc : 9.79 8.822 5.37\n angles : 90.0 105.81 90.0\n volume : 446.2477597745632\n      A : n...O) (3.327, 0.1747, 4.361) [0.3532, 0.0198, 0.9876]\nPeriodicSite: O3 (O) (6.093, 0.1747, 1.026) [0.6468, 0.0198, 0.5124]\nexpected = 'ABC6D2_mC40_15_e_e_3f_f:Ca-Fe-O-Si'\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.parametrize((\u001b[33m\"\u001b[39;49;00m\u001b[33mstructure\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mexpected\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m), \u001b[96mzip\u001b[39;49;00m(TEST_STRUCTS, TEST_PROTOSTRUCTURES, strict=\u001b[94mFalse\u001b[39;49;00m))\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_protostructure_label_from_moyopy\u001b[39;49;00m(structure, expected):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Check that moyopy gives correct protostructure label simple cases.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m get_protostructure_label_from_moyopy(structure) == expected, (\u001b[90m\u001b[39;49;00m\n            \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33munexpected moyopy protostructure for \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mstructure\u001b[33m=}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_prototypes.py\u001b[0m:355: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstruct = Structure Summary\nLattice\n    abc : 9.79 8.822 5.37\n angles : 90.0 105.81 90.0\n volume : 446.2477597745632\n      A : n...O) (3.327, 0.1747, 4.361) [0.3532, 0.0198, 0.9876]\nPeriodicSite: O3 (O) (6.093, 0.1747, 1.026) [0.6468, 0.0198, 0.5124]\nraise_errors = False, symprec = 0.1\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mget_protostructure_label_from_moyopy\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        struct: Structure,\u001b[90m\u001b[39;49;00m\n        raise_errors: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        symprec: \u001b[96mfloat\u001b[39;49;00m = \u001b[94m0.1\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Get AFLOW prototype label using Moyopy for symmetry detection.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        struct (Structure): pymatgen Structure object.\u001b[39;49;00m\n    \u001b[33m        raise_errors (bool): Whether to raise errors or annotate them. Defaults to\u001b[39;49;00m\n    \u001b[33m            False.\u001b[39;49;00m\n    \u001b[33m        symprec (float): Initial symmetry precision for Moyopy. Defaults to 0.1.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        str: protostructure_label which is constructed as `aflow_label:chemsys` or\u001b[39;49;00m\n    \u001b[33m            explanation of failure if symmetry detection failed and `raise_errors`\u001b[39;49;00m\n    \u001b[33m            is False.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m has_moyopy:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m \u001b[96mImportError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mmoyopy not found, run pip install moyopy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ImportError: moyopy not found, run pip install moyopy\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/prototypes/__init__.py\u001b[0m:524: ImportError\n\u001b[31m\u001b[1m________________________ TestQuasiRRHO.test_qrrho_qchem ________________________\u001b[0m\n\nself = <analysis.test_quasirrho.TestQuasiRRHO object at 0x7f0ce5dd4fd0>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_qrrho_qchem\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    Testing from a QChem output file. \"Correct\" values are from\u001b[39;49;00m\n    \u001b[33m    the version of QuasiRRHO that worked for Gaussian.\u001b[39;49;00m\n    \u001b[33m    initial run.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        correct_g = -\u001b[94m428.60768184222934\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        correct_stot = \u001b[94m103.41012732045324\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# HO total entropy from QChem = 106.521\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n>       qrrho = QuasiRRHO.from_qc_output(\u001b[96mself\u001b[39;49;00m.qout)\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/analysis/test_quasirrho.py\u001b[0m:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'pymatgen.analysis.quasirrho.QuasiRRHO'>\noutput = <pymatgen.io.qchem.outputs.QCOutput object at 0x7f0d32033850>\nkwargs = {}, mult = 1\n\n    \u001b[0m\u001b[37m@classmethod\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mfrom_qc_output\u001b[39;49;00m(\u001b[96mcls\u001b[39;49;00m, output: QCOutput, **kwargs) -> Self:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    Args:\u001b[39;49;00m\n    \u001b[33m        output (QCOutput): Pymatgen QCOutput object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns:\u001b[39;49;00m\n    \u001b[33m        QuasiRRHO: QuasiRRHO class instantiated from a QChem Output\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        mult = output.data[\u001b[33m\"\u001b[39;49;00m\u001b[33mmultiplicity\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n>       elec_e = output.data[\u001b[33m\"\u001b[39;49;00m\u001b[33mSCF_energy_in_the_final_basis_set\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE       KeyError: 'SCF_energy_in_the_final_basis_set'\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/analysis/quasirrho.py\u001b[0m:167: KeyError\n\u001b[31m\u001b[1m_________________ TestVaspToComputedEntryDrone.test_assimilate _________________\u001b[0m\n\nself = <apps.borg.test_hive.TestVaspToComputedEntryDrone object at 0x7f0ce5c8c820>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_assimilate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Test assimilate data from \"vasprun.xml.xe.gz\" file.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        entry = \u001b[96mself\u001b[39;49;00m.drone.assimilate(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33m{\u001b[39;49;00mTEST_DIR\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mfor\u001b[39;49;00m param \u001b[95min\u001b[39;49;00m (\u001b[33m\"\u001b[39;49;00m\u001b[33mhubbards\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mis_hubbard\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mpotcar_spec\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mrun_type\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n>           \u001b[94massert\u001b[39;49;00m param \u001b[95min\u001b[39;49;00m entry.parameters\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           AttributeError: 'NoneType' object has no attribute 'parameters'\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/apps/borg/test_hive.py\u001b[0m:37: AttributeError\n\u001b[31m\u001b[1m_________________________ TestBorgQueen.test_get_data __________________________\u001b[0m\n\nself = <apps.borg.test_queen.TestBorgQueen object at 0x7f0ce5cb9f00>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_get_data\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Test get data from vasprun.xml.xe.gz file.\"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        drone = VaspToComputedEntryDrone()\u001b[90m\u001b[39;49;00m\n        queen = BorgQueen(drone, TEST_DIR, \u001b[94m1\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        data = queen.get_data()\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(data) == \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>       \u001b[94massert\u001b[39;49;00m data[\u001b[94m0\u001b[39;49;00m].energy == approx(\u001b[94m0.5559329\u001b[39;49;00m, \u001b[94m1e-6\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE       AttributeError: 'NoneType' object has no attribute 'energy'\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/apps/borg/test_queen.py\u001b[0m:23: AttributeError\n\u001b[31m\u001b[1m________________________ TestStructure.test_merge_sites ________________________\u001b[0m\n\nself = <core.test_structure.TestStructure object at 0x7f0ce5918070>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_merge_sites\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n        species = [\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.5\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.25\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.1\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.5\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.15\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.1\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m1.501\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m1.501\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct = Structure(Lattice.cubic(\u001b[94m1\u001b[39;49;00m), species, coords)\u001b[90m\u001b[39;49;00m\n        struct.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33msum\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m struct[\u001b[94m0\u001b[39;49;00m].specie.symbol == \u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m struct[\u001b[94m1\u001b[39;49;00m].species == Composition({\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.35\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.25\u001b[39;49;00m})\u001b[90m\u001b[39;49;00m\n        assert_allclose(struct[\u001b[94m1\u001b[39;49;00m].frac_coords, [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5005\u001b[39;49;00m])\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test illegal mode\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mwith\u001b[39;49;00m pytest.raises(\u001b[96mValueError\u001b[39;49;00m, match=\u001b[33m\"\u001b[39;49;00m\u001b[33mIllegal mode=\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33millegal\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33m, should start with a/d/s\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n            struct.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33millegal\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test for TaS2 with spacegroup 166 in 160 setting\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.374351\u001b[39;49;00m, \u001b[94m20.308941\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mTa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.944333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.353424\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.535243\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct_tas2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_tas2) == \u001b[94m13\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_tas2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33mdelete\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_tas2) == \u001b[94m9\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.587776\u001b[39;49;00m, \u001b[94m19.622793\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mV\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.165000\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.998333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.399394\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.597273\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct_navs2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m18\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33mdelete\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m12\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test that we can average the site properties that are numerical (float/int)\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.587776\u001b[39;49;00m, \u001b[94m19.622793\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mV\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.165000\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.998333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.399394\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.597273\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        site_props = {\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: [\u001b[94m3.0\u001b[39;49;00m, \u001b[94m5.0\u001b[39;49;00m, \u001b[94m7.0\u001b[39;49;00m, \u001b[94m11.0\u001b[39;49;00m]}\u001b[90m\u001b[39;49;00m\n        struct_navs2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords, site_properties=site_props)\u001b[90m\u001b[39;49;00m\n        struct_navs2.insert(\u001b[94m0\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, coords[\u001b[94m0\u001b[39;49;00m], properties={\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m100\u001b[39;49;00m})  \u001b[90m# int property\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33maverage\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m12\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96many\u001b[39;49;00m(math.isclose(site.properties[\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m], \u001b[94m51.5\u001b[39;49;00m) \u001b[94mfor\u001b[39;49;00m site \u001b[95min\u001b[39;49;00m struct_navs2)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test non-numerical property warning\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.insert(\u001b[94m0\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, coords[\u001b[94m0\u001b[39;49;00m], properties={\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[33m\"\u001b[39;49;00m\u001b[33mhi\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m})\u001b[90m\u001b[39;49;00m\n        \u001b[94mwith\u001b[39;49;00m pytest.warns(\u001b[96mUserWarning\u001b[39;49;00m, match=\u001b[33m\"\u001b[39;49;00m\u001b[33mBut property is set to None\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n>           struct_navs2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33maverage\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/core/test_structure.py\u001b[0m:1806: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/core/structure.py\u001b[0m:4884: in merge_sites\n    \u001b[0m\u001b[94mif\u001b[39;49;00m val \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m \u001b[95mand\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m np.array_equal(\u001b[96mself\u001b[39;49;00m[clust_idx].properties[key], val):  \u001b[90m# type:ignore[index]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na1 = array(51.5), a2 = array('hi', dtype='<U2'), equal_nan = False\n\n    \u001b[0m\u001b[37m@array_function_dispatch\u001b[39;49;00m(_array_equal_dispatcher)\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92marray_equal\u001b[39;49;00m(a1, a2, equal_nan=\u001b[94mFalse\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    True if two arrays have the same shape and elements, False otherwise.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Parameters\u001b[39;49;00m\n    \u001b[33m    ----------\u001b[39;49;00m\n    \u001b[33m    a1, a2 : array_like\u001b[39;49;00m\n    \u001b[33m        Input arrays.\u001b[39;49;00m\n    \u001b[33m    equal_nan : bool\u001b[39;49;00m\n    \u001b[33m        Whether to compare NaN's as equal. If the dtype of a1 and a2 is\u001b[39;49;00m\n    \u001b[33m        complex, values will be considered equal if either the real or the\u001b[39;49;00m\n    \u001b[33m        imaginary component of a given value is ``nan``.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        .. versionadded:: 1.19.0\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Returns\u001b[39;49;00m\n    \u001b[33m    -------\u001b[39;49;00m\n    \u001b[33m    b : bool\u001b[39;49;00m\n    \u001b[33m        Returns True if the arrays are equal.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    See Also\u001b[39;49;00m\n    \u001b[33m    --------\u001b[39;49;00m\n    \u001b[33m    allclose: Returns True if two arrays are element-wise equal within a\u001b[39;49;00m\n    \u001b[33m              tolerance.\u001b[39;49;00m\n    \u001b[33m    array_equiv: Returns True if input arrays are shape consistent and all\u001b[39;49;00m\n    \u001b[33m                 elements equal.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    Examples\u001b[39;49;00m\n    \u001b[33m    --------\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal([1, 2], [1, 2])\u001b[39;49;00m\n    \u001b[33m    True\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal(np.array([1, 2]), np.array([1, 2]))\u001b[39;49;00m\n    \u001b[33m    True\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal([1, 2], [1, 2, 3])\u001b[39;49;00m\n    \u001b[33m    False\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal([1, 2], [1, 4])\u001b[39;49;00m\n    \u001b[33m    False\u001b[39;49;00m\n    \u001b[33m    >>> a = np.array([1, np.nan])\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal(a, a)\u001b[39;49;00m\n    \u001b[33m    False\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal(a, a, equal_nan=True)\u001b[39;49;00m\n    \u001b[33m    True\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    When ``equal_nan`` is True, complex values with nan components are\u001b[39;49;00m\n    \u001b[33m    considered equal if either the real *or* the imaginary components are nan.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    >>> a = np.array([1 + 1j])\u001b[39;49;00m\n    \u001b[33m    >>> b = a.copy()\u001b[39;49;00m\n    \u001b[33m    >>> a.real = np.nan\u001b[39;49;00m\n    \u001b[33m    >>> b.imag = np.nan\u001b[39;49;00m\n    \u001b[33m    >>> np.array_equal(a, b, equal_nan=True)\u001b[39;49;00m\n    \u001b[33m    True\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            a1, a2 = asarray(a1), asarray(a2)\u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m \u001b[96mException\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[94mreturn\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m a1.shape != a2.shape:\u001b[90m\u001b[39;49;00m\n            \u001b[94mreturn\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m equal_nan:\u001b[90m\u001b[39;49;00m\n>           \u001b[94mreturn\u001b[39;49;00m builtins.bool((a1 == a2).all())\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           AttributeError: 'bool' object has no attribute 'all'\u001b[0m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/numpy/_core/numeric.py\u001b[0m:2506: AttributeError\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\nself = <core.test_structure.TestStructure object at 0x7f0ce5918070>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_merge_sites\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n        species = [\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.5\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.25\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.1\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.5\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.15\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n            {\u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.1\u001b[39;49;00m},\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m1.501\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m1.501\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct = Structure(Lattice.cubic(\u001b[94m1\u001b[39;49;00m), species, coords)\u001b[90m\u001b[39;49;00m\n        struct.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33msum\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m struct[\u001b[94m0\u001b[39;49;00m].specie.symbol == \u001b[33m\"\u001b[39;49;00m\u001b[33mAg\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m struct[\u001b[94m1\u001b[39;49;00m].species == Composition({\u001b[33m\"\u001b[39;49;00m\u001b[33mCl\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.35\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m0.25\u001b[39;49;00m})\u001b[90m\u001b[39;49;00m\n        assert_allclose(struct[\u001b[94m1\u001b[39;49;00m].frac_coords, [\u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5\u001b[39;49;00m, \u001b[94m0.5005\u001b[39;49;00m])\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test illegal mode\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mwith\u001b[39;49;00m pytest.raises(\u001b[96mValueError\u001b[39;49;00m, match=\u001b[33m\"\u001b[39;49;00m\u001b[33mIllegal mode=\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33millegal\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33m, should start with a/d/s\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n            struct.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33millegal\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test for TaS2 with spacegroup 166 in 160 setting\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.374351\u001b[39;49;00m, \u001b[94m20.308941\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mTa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.944333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.353424\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.535243\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct_tas2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_tas2) == \u001b[94m13\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_tas2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33mdelete\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_tas2) == \u001b[94m9\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.587776\u001b[39;49;00m, \u001b[94m19.622793\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mV\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.165000\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.998333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.399394\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.597273\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        struct_navs2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m18\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33mdelete\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m12\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test that we can average the site properties that are numerical (float/int)\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        lattice = Lattice.hexagonal(\u001b[94m3.587776\u001b[39;49;00m, \u001b[94m19.622793\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        species = [\u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mV\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n        coords = [\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.165000\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, \u001b[94m0.998333\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.399394\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n            [\u001b[94m0.666667\u001b[39;49;00m, \u001b[94m0.333333\u001b[39;49;00m, \u001b[94m0.597273\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n        ]\u001b[90m\u001b[39;49;00m\n        site_props = {\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: [\u001b[94m3.0\u001b[39;49;00m, \u001b[94m5.0\u001b[39;49;00m, \u001b[94m7.0\u001b[39;49;00m, \u001b[94m11.0\u001b[39;49;00m]}\u001b[90m\u001b[39;49;00m\n        struct_navs2 = Structure.from_spacegroup(\u001b[94m160\u001b[39;49;00m, lattice, species, coords, site_properties=site_props)\u001b[90m\u001b[39;49;00m\n        struct_navs2.insert(\u001b[94m0\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, coords[\u001b[94m0\u001b[39;49;00m], properties={\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[94m100\u001b[39;49;00m})  \u001b[90m# int property\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.merge_sites(mode=\u001b[33m\"\u001b[39;49;00m\u001b[33maverage\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(struct_navs2) == \u001b[94m12\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94massert\u001b[39;49;00m \u001b[96many\u001b[39;49;00m(math.isclose(site.properties[\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m], \u001b[94m51.5\u001b[39;49;00m) \u001b[94mfor\u001b[39;49;00m site \u001b[95min\u001b[39;49;00m struct_navs2)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Test non-numerical property warning\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        struct_navs2.insert(\u001b[94m0\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mNa\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, coords[\u001b[94m0\u001b[39;49;00m], properties={\u001b[33m\"\u001b[39;49;00m\u001b[33mprop1\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: \u001b[33m\"\u001b[39;49;00m\u001b[33mhi\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m})\u001b[90m\u001b[39;49;00m\n>       \u001b[94mwith\u001b[39;49;00m pytest.warns(\u001b[96mUserWarning\u001b[39;49;00m, match=\u001b[33m\"\u001b[39;49;00m\u001b[33mBut property is set to None\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE       Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.\u001b[0m\n\u001b[1m\u001b[31mE        Emitted warnings: [].\u001b[0m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/core/test_structure.py\u001b[0m:1805: Failed\n\u001b[31m\u001b[1m_______________________ TestOptimade.test_update_aliases _______________________\u001b[0m\n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f0d2837ea70>\nconn = <urllib3.connection.HTTPSConnection object at 0x7f0cf8b98dc0>\nmethod = 'GET', url = '/providers.json', body = None\nheaders = {'User-Agent': 'python-requests/2.32.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\nretries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\ntimeout = Timeout(connect=5, read=5, total=None), chunked = False\nresponse_conn = <urllib3.connection.HTTPSConnection object at 0x7f0cf8b98dc0>\npreload_content = False, decode_content = False, enforce_content_length = True\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92m_make_request\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        conn: BaseHTTPConnection,\u001b[90m\u001b[39;49;00m\n        method: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        url: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        body: _TYPE_BODY | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        headers: typing.Mapping[\u001b[96mstr\u001b[39;49;00m, \u001b[96mstr\u001b[39;49;00m] | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        retries: Retry | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\u001b[90m\u001b[39;49;00m\n        chunked: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        response_conn: BaseHTTPConnection | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        preload_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        decode_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        enforce_content_length: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> BaseHTTPResponse:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    Perform a request on a given urllib connection object taken from our\u001b[39;49;00m\n    \u001b[33m    pool.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param conn:\u001b[39;49;00m\n    \u001b[33m        a connection from one of our connection pools\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param method:\u001b[39;49;00m\n    \u001b[33m        HTTP request method (such as GET, POST, PUT, etc.)\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param url:\u001b[39;49;00m\n    \u001b[33m        The URL to perform the request on.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param body:\u001b[39;49;00m\n    \u001b[33m        Data to send in the request body, either :class:`str`, :class:`bytes`,\u001b[39;49;00m\n    \u001b[33m        an iterable of :class:`str`/:class:`bytes`, or a file-like object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param headers:\u001b[39;49;00m\n    \u001b[33m        Dictionary of custom headers to send, such as User-Agent,\u001b[39;49;00m\n    \u001b[33m        If-None-Match, etc. If None, pool headers are used. If provided,\u001b[39;49;00m\n    \u001b[33m        these headers completely replace any pool-specific headers.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param retries:\u001b[39;49;00m\n    \u001b[33m        Configure the number of retries to allow before raising a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.exceptions.MaxRetryError` exception.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        Pass ``None`` to retry until you receive a response. Pass a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.util.retry.Retry` object for fine-grained control\u001b[39;49;00m\n    \u001b[33m        over different types of retries.\u001b[39;49;00m\n    \u001b[33m        Pass an integer number to retry connection errors that many times,\u001b[39;49;00m\n    \u001b[33m        but no other types of errors. Pass zero to never retry.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        If ``False``, then retries are disabled and any exception is raised\u001b[39;49;00m\n    \u001b[33m        immediately. Also, instead of raising a MaxRetryError on redirects,\u001b[39;49;00m\n    \u001b[33m        the redirect response will be returned.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param timeout:\u001b[39;49;00m\n    \u001b[33m        If specified, overrides the default timeout for this one\u001b[39;49;00m\n    \u001b[33m        request. It may be a float (in seconds) or an instance of\u001b[39;49;00m\n    \u001b[33m        :class:`urllib3.util.Timeout`.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param chunked:\u001b[39;49;00m\n    \u001b[33m        If True, urllib3 will send the body using chunked transfer\u001b[39;49;00m\n    \u001b[33m        encoding. Otherwise, urllib3 will send the body using the standard\u001b[39;49;00m\n    \u001b[33m        content-length form. Defaults to False.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param response_conn:\u001b[39;49;00m\n    \u001b[33m        Set this to ``None`` if you will handle releasing the connection or\u001b[39;49;00m\n    \u001b[33m        set the connection to have the response release it.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param preload_content:\u001b[39;49;00m\n    \u001b[33m      If True, the response's body will be preloaded during construction.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param decode_content:\u001b[39;49;00m\n    \u001b[33m        If True, will attempt to decode the body based on the\u001b[39;49;00m\n    \u001b[33m        'content-encoding' header.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param enforce_content_length:\u001b[39;49;00m\n    \u001b[33m        Enforce content length checking. Body returned by server must match\u001b[39;49;00m\n    \u001b[33m        value of Content-Length header, if present. Otherwise, raise error.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.num_requests += \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        timeout_obj = \u001b[96mself\u001b[39;49;00m._get_timeout(timeout)\u001b[90m\u001b[39;49;00m\n        timeout_obj.start_connect()\u001b[90m\u001b[39;49;00m\n        conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Trigger any extra validation we need to do.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n>               \u001b[96mself\u001b[39;49;00m._validate_conn(conn)\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py\u001b[0m:464: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py\u001b[0m:1093: in _validate_conn\n    \u001b[0mconn.connect()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connection.py\u001b[0m:790: in connect\n    \u001b[0msock_and_verified = _ssl_wrap_socket_and_match_hostname(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connection.py\u001b[0m:969: in _ssl_wrap_socket_and_match_hostname\n    \u001b[0mssl_sock = ssl_wrap_socket(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py\u001b[0m:480: in ssl_wrap_socket\n    \u001b[0mssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py\u001b[0m:524: in _ssl_wrap_socket_impl\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m ssl_context.wrap_socket(sock, server_hostname=server_hostname)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/lib/python3.10/ssl.py\u001b[0m:513: in wrap_socket\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.sslsocket_class._create(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/lib/python3.10/ssl.py\u001b[0m:1100: in _create\n    \u001b[0m\u001b[96mself\u001b[39;49;00m.do_handshake()\u001b[90m\u001b[39;49;00m\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    \u001b[0m\u001b[37m@_sslcopydoc\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mdo_handshake\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, block=\u001b[94mFalse\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m._check_connected()\u001b[90m\u001b[39;49;00m\n        timeout = \u001b[96mself\u001b[39;49;00m.gettimeout()\u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m timeout == \u001b[94m0.0\u001b[39;49;00m \u001b[95mand\u001b[39;49;00m block:\u001b[90m\u001b[39;49;00m\n                \u001b[96mself\u001b[39;49;00m.settimeout(\u001b[94mNone\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n>           \u001b[96mself\u001b[39;49;00m._sslobj.do_handshake()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\u001b[0m\n\n\u001b[1m\u001b[31m/usr/lib/python3.10/ssl.py\u001b[0m:1371: SSLEOFError\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f0d2837ea70>\nmethod = 'GET', url = '/providers.json', body = None\nheaders = {'User-Agent': 'python-requests/2.32.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\nretries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\nredirect = False, assert_same_host = False\ntimeout = Timeout(connect=5, read=5, total=None), pool_timeout = None\nrelease_conn = False, chunked = False, body_pos = None, preload_content = False\ndecode_content = False, response_kw = {}\nparsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/providers.json', query=None, fragment=None)\ndestination_scheme = None, conn = None, release_this_conn = True\nhttp_tunnel_required = False, err = None, clean_exit = False\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92murlopen\u001b[39;49;00m(  \u001b[90m# type: ignore[override]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        method: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        url: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        body: _TYPE_BODY | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        headers: typing.Mapping[\u001b[96mstr\u001b[39;49;00m, \u001b[96mstr\u001b[39;49;00m] | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        retries: Retry | \u001b[96mbool\u001b[39;49;00m | \u001b[96mint\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        redirect: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        assert_same_host: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\u001b[90m\u001b[39;49;00m\n        pool_timeout: \u001b[96mint\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        release_conn: \u001b[96mbool\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        chunked: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        body_pos: _TYPE_BODY_POSITION | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        preload_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        decode_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        **response_kw: typing.Any,\u001b[90m\u001b[39;49;00m\n    ) -> BaseHTTPResponse:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    Get a connection from the pool and perform an HTTP request. This is the\u001b[39;49;00m\n    \u001b[33m    lowest level call for making a request, so you'll need to specify all\u001b[39;49;00m\n    \u001b[33m    the raw details.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    .. note::\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m       More commonly, it's appropriate to use a convenience method\u001b[39;49;00m\n    \u001b[33m       such as :meth:`request`.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    .. note::\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m       `release_conn` will only behave as expected if\u001b[39;49;00m\n    \u001b[33m       `preload_content=False` because we want to make\u001b[39;49;00m\n    \u001b[33m       `preload_content=False` the default behaviour someday soon without\u001b[39;49;00m\n    \u001b[33m       breaking backwards compatibility.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param method:\u001b[39;49;00m\n    \u001b[33m        HTTP request method (such as GET, POST, PUT, etc.)\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param url:\u001b[39;49;00m\n    \u001b[33m        The URL to perform the request on.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param body:\u001b[39;49;00m\n    \u001b[33m        Data to send in the request body, either :class:`str`, :class:`bytes`,\u001b[39;49;00m\n    \u001b[33m        an iterable of :class:`str`/:class:`bytes`, or a file-like object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param headers:\u001b[39;49;00m\n    \u001b[33m        Dictionary of custom headers to send, such as User-Agent,\u001b[39;49;00m\n    \u001b[33m        If-None-Match, etc. If None, pool headers are used. If provided,\u001b[39;49;00m\n    \u001b[33m        these headers completely replace any pool-specific headers.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param retries:\u001b[39;49;00m\n    \u001b[33m        Configure the number of retries to allow before raising a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.exceptions.MaxRetryError` exception.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        If ``None`` (default) will retry 3 times, see ``Retry.DEFAULT``. Pass a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.util.retry.Retry` object for fine-grained control\u001b[39;49;00m\n    \u001b[33m        over different types of retries.\u001b[39;49;00m\n    \u001b[33m        Pass an integer number to retry connection errors that many times,\u001b[39;49;00m\n    \u001b[33m        but no other types of errors. Pass zero to never retry.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        If ``False``, then retries are disabled and any exception is raised\u001b[39;49;00m\n    \u001b[33m        immediately. Also, instead of raising a MaxRetryError on redirects,\u001b[39;49;00m\n    \u001b[33m        the redirect response will be returned.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param redirect:\u001b[39;49;00m\n    \u001b[33m        If True, automatically handle redirects (status codes 301, 302,\u001b[39;49;00m\n    \u001b[33m        303, 307, 308). Each redirect counts as a retry. Disabling retries\u001b[39;49;00m\n    \u001b[33m        will disable redirect, too.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param assert_same_host:\u001b[39;49;00m\n    \u001b[33m        If ``True``, will make sure that the host of the pool requests is\u001b[39;49;00m\n    \u001b[33m        consistent else will raise HostChangedError. When ``False``, you can\u001b[39;49;00m\n    \u001b[33m        use the pool on an HTTP proxy and request foreign hosts.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param timeout:\u001b[39;49;00m\n    \u001b[33m        If specified, overrides the default timeout for this one\u001b[39;49;00m\n    \u001b[33m        request. It may be a float (in seconds) or an instance of\u001b[39;49;00m\n    \u001b[33m        :class:`urllib3.util.Timeout`.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param pool_timeout:\u001b[39;49;00m\n    \u001b[33m        If set and the pool is set to block=True, then this method will\u001b[39;49;00m\n    \u001b[33m        block for ``pool_timeout`` seconds and raise EmptyPoolError if no\u001b[39;49;00m\n    \u001b[33m        connection is available within the time period.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param bool preload_content:\u001b[39;49;00m\n    \u001b[33m        If True, the response's body will be preloaded into memory.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param bool decode_content:\u001b[39;49;00m\n    \u001b[33m        If True, will attempt to decode the body based on the\u001b[39;49;00m\n    \u001b[33m        'content-encoding' header.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param release_conn:\u001b[39;49;00m\n    \u001b[33m        If False, then the urlopen call will not release the connection\u001b[39;49;00m\n    \u001b[33m        back into the pool once a response is received (but will release if\u001b[39;49;00m\n    \u001b[33m        you read the entire contents of the response such as when\u001b[39;49;00m\n    \u001b[33m        `preload_content=True`). This is useful if you're not preloading\u001b[39;49;00m\n    \u001b[33m        the response's content immediately. You will need to call\u001b[39;49;00m\n    \u001b[33m        ``r.release_conn()`` on the response ``r`` to return the connection\u001b[39;49;00m\n    \u001b[33m        back into the pool. If None, it takes the value of ``preload_content``\u001b[39;49;00m\n    \u001b[33m        which defaults to ``True``.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param bool chunked:\u001b[39;49;00m\n    \u001b[33m        If True, urllib3 will send the body using chunked transfer\u001b[39;49;00m\n    \u001b[33m        encoding. Otherwise, urllib3 will send the body using the standard\u001b[39;49;00m\n    \u001b[33m        content-length form. Defaults to False.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param int body_pos:\u001b[39;49;00m\n    \u001b[33m        Position to seek to in file-like body in the event of a retry or\u001b[39;49;00m\n    \u001b[33m        redirect. Typically this won't need to be set because urllib3 will\u001b[39;49;00m\n    \u001b[33m        auto-populate the value when needed.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        parsed_url = parse_url(url)\u001b[90m\u001b[39;49;00m\n        destination_scheme = parsed_url.scheme\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m headers \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            headers = \u001b[96mself\u001b[39;49;00m.headers\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(retries, Retry):\u001b[90m\u001b[39;49;00m\n            retries = Retry.from_int(retries, redirect=redirect, default=\u001b[96mself\u001b[39;49;00m.retries)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m release_conn \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            release_conn = preload_content\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Check host\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m assert_same_host \u001b[95mand\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.is_same_host(url):\u001b[90m\u001b[39;49;00m\n            \u001b[94mraise\u001b[39;49;00m HostChangedError(\u001b[96mself\u001b[39;49;00m, url, retries)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Ensure that the URL we're connecting to is properly encoded\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m url.startswith(\u001b[33m\"\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n            url = to_str(_encode_target(url))\u001b[90m\u001b[39;49;00m\n        \u001b[94melse\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            url = to_str(parsed_url.url)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        conn = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Track whether `conn` needs to be released before\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# returning/raising/recursing. Update this variable if necessary, and\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# leave `release_conn` constant throughout the function. That way, if\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# the function recurses, the original value of `release_conn` will be\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# passed down into the recursive call, and its value will be respected.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m#\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# See issue #651 [1] for details.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m#\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# [1] <https://github.com/urllib3/urllib3/issues/651>\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        release_this_conn = release_conn\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        http_tunnel_required = connection_requires_http_tunnel(\u001b[90m\u001b[39;49;00m\n            \u001b[96mself\u001b[39;49;00m.proxy, \u001b[96mself\u001b[39;49;00m.proxy_config, destination_scheme\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Merge the proxy headers. Only done when not using HTTP CONNECT. We\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# have to copy the headers dict so we can safely change it without those\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# changes being reflected in anyone else's copy.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m http_tunnel_required:\u001b[90m\u001b[39;49;00m\n            headers = headers.copy()  \u001b[90m# type: ignore[attr-defined]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            headers.update(\u001b[96mself\u001b[39;49;00m.proxy_headers)  \u001b[90m# type: ignore[union-attr]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Must keep the exception bound to a separate variable or else Python 3\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# complains about UnboundLocalError.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        err = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Keep track of whether we cleanly exited the except block. This\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# ensures we do proper cleanup in finally.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        clean_exit = \u001b[94mFalse\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# Rewind body position, if needed. Record current position\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# for future rewinds in the event of a redirect/retry.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        body_pos = set_file_position(body, body_pos)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Request a connection from the queue.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            timeout_obj = \u001b[96mself\u001b[39;49;00m._get_timeout(timeout)\u001b[90m\u001b[39;49;00m\n            conn = \u001b[96mself\u001b[39;49;00m._get_conn(timeout=pool_timeout)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            conn.timeout = timeout_obj.connect_timeout  \u001b[90m# type: ignore[assignment]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[90m# Is this a closed/new connection that requires CONNECT tunnelling?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.proxy \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m \u001b[95mand\u001b[39;49;00m http_tunnel_required \u001b[95mand\u001b[39;49;00m conn.is_closed:\u001b[90m\u001b[39;49;00m\n                \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                    \u001b[96mself\u001b[39;49;00m._prepare_proxy(conn)\u001b[90m\u001b[39;49;00m\n                \u001b[94mexcept\u001b[39;49;00m (BaseSSLError, \u001b[96mOSError\u001b[39;49;00m, SocketTimeout) \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n                    \u001b[96mself\u001b[39;49;00m._raise_timeout(\u001b[90m\u001b[39;49;00m\n                        err=e, url=\u001b[96mself\u001b[39;49;00m.proxy.url, timeout_value=conn.timeout\u001b[90m\u001b[39;49;00m\n                    )\u001b[90m\u001b[39;49;00m\n                    \u001b[94mraise\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[90m# If we're going to release the connection in ``finally:``, then\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[90m# the response doesn't need to know about the connection. Otherwise\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[90m# it will also try to release it and we'll have a double-release\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[90m# mess.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            response_conn = conn \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m release_conn \u001b[94melse\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[90m# Make the request on the HTTPConnection object\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>           response = \u001b[96mself\u001b[39;49;00m._make_request(\u001b[90m\u001b[39;49;00m\n                conn,\u001b[90m\u001b[39;49;00m\n                method,\u001b[90m\u001b[39;49;00m\n                url,\u001b[90m\u001b[39;49;00m\n                timeout=timeout_obj,\u001b[90m\u001b[39;49;00m\n                body=body,\u001b[90m\u001b[39;49;00m\n                headers=headers,\u001b[90m\u001b[39;49;00m\n                chunked=chunked,\u001b[90m\u001b[39;49;00m\n                retries=retries,\u001b[90m\u001b[39;49;00m\n                response_conn=response_conn,\u001b[90m\u001b[39;49;00m\n                preload_content=preload_content,\u001b[90m\u001b[39;49;00m\n                decode_content=decode_content,\u001b[90m\u001b[39;49;00m\n                **response_kw,\u001b[90m\u001b[39;49;00m\n            )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py\u001b[0m:787: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f0d2837ea70>\nconn = <urllib3.connection.HTTPSConnection object at 0x7f0cf8b98dc0>\nmethod = 'GET', url = '/providers.json', body = None\nheaders = {'User-Agent': 'python-requests/2.32.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\nretries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\ntimeout = Timeout(connect=5, read=5, total=None), chunked = False\nresponse_conn = <urllib3.connection.HTTPSConnection object at 0x7f0cf8b98dc0>\npreload_content = False, decode_content = False, enforce_content_length = True\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92m_make_request\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        conn: BaseHTTPConnection,\u001b[90m\u001b[39;49;00m\n        method: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        url: \u001b[96mstr\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        body: _TYPE_BODY | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        headers: typing.Mapping[\u001b[96mstr\u001b[39;49;00m, \u001b[96mstr\u001b[39;49;00m] | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        retries: Retry | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\u001b[90m\u001b[39;49;00m\n        chunked: \u001b[96mbool\u001b[39;49;00m = \u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        response_conn: BaseHTTPConnection | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        preload_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        decode_content: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        enforce_content_length: \u001b[96mbool\u001b[39;49;00m = \u001b[94mTrue\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> BaseHTTPResponse:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n    \u001b[33m    Perform a request on a given urllib connection object taken from our\u001b[39;49;00m\n    \u001b[33m    pool.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param conn:\u001b[39;49;00m\n    \u001b[33m        a connection from one of our connection pools\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param method:\u001b[39;49;00m\n    \u001b[33m        HTTP request method (such as GET, POST, PUT, etc.)\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param url:\u001b[39;49;00m\n    \u001b[33m        The URL to perform the request on.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param body:\u001b[39;49;00m\n    \u001b[33m        Data to send in the request body, either :class:`str`, :class:`bytes`,\u001b[39;49;00m\n    \u001b[33m        an iterable of :class:`str`/:class:`bytes`, or a file-like object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param headers:\u001b[39;49;00m\n    \u001b[33m        Dictionary of custom headers to send, such as User-Agent,\u001b[39;49;00m\n    \u001b[33m        If-None-Match, etc. If None, pool headers are used. If provided,\u001b[39;49;00m\n    \u001b[33m        these headers completely replace any pool-specific headers.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param retries:\u001b[39;49;00m\n    \u001b[33m        Configure the number of retries to allow before raising a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.exceptions.MaxRetryError` exception.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        Pass ``None`` to retry until you receive a response. Pass a\u001b[39;49;00m\n    \u001b[33m        :class:`~urllib3.util.retry.Retry` object for fine-grained control\u001b[39;49;00m\n    \u001b[33m        over different types of retries.\u001b[39;49;00m\n    \u001b[33m        Pass an integer number to retry connection errors that many times,\u001b[39;49;00m\n    \u001b[33m        but no other types of errors. Pass zero to never retry.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m        If ``False``, then retries are disabled and any exception is raised\u001b[39;49;00m\n    \u001b[33m        immediately. Also, instead of raising a MaxRetryError on redirects,\u001b[39;49;00m\n    \u001b[33m        the redirect response will be returned.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param timeout:\u001b[39;49;00m\n    \u001b[33m        If specified, overrides the default timeout for this one\u001b[39;49;00m\n    \u001b[33m        request. It may be a float (in seconds) or an instance of\u001b[39;49;00m\n    \u001b[33m        :class:`urllib3.util.Timeout`.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param chunked:\u001b[39;49;00m\n    \u001b[33m        If True, urllib3 will send the body using chunked transfer\u001b[39;49;00m\n    \u001b[33m        encoding. Otherwise, urllib3 will send the body using the standard\u001b[39;49;00m\n    \u001b[33m        content-length form. Defaults to False.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param response_conn:\u001b[39;49;00m\n    \u001b[33m        Set this to ``None`` if you will handle releasing the connection or\u001b[39;49;00m\n    \u001b[33m        set the connection to have the response release it.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param preload_content:\u001b[39;49;00m\n    \u001b[33m      If True, the response's body will be preloaded during construction.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param decode_content:\u001b[39;49;00m\n    \u001b[33m        If True, will attempt to decode the body based on the\u001b[39;49;00m\n    \u001b[33m        'content-encoding' header.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param enforce_content_length:\u001b[39;49;00m\n    \u001b[33m        Enforce content length checking. Body returned by server must match\u001b[39;49;00m\n    \u001b[33m        value of Content-Length header, if present. Otherwise, raise error.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.num_requests += \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        timeout_obj = \u001b[96mself\u001b[39;49;00m._get_timeout(timeout)\u001b[90m\u001b[39;49;00m\n        timeout_obj.start_connect()\u001b[90m\u001b[39;49;00m\n        conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Trigger any extra validation we need to do.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                \u001b[96mself\u001b[39;49;00m._validate_conn(conn)\u001b[90m\u001b[39;49;00m\n            \u001b[94mexcept\u001b[39;49;00m (SocketTimeout, BaseSSLError) \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n                \u001b[96mself\u001b[39;49;00m._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[90m# _validate_conn() starts the connection to an HTTPS proxy\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[90m# so we need to wrap errors with 'ProxyError' here too.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m (\u001b[90m\u001b[39;49;00m\n            \u001b[96mOSError\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            NewConnectionError,\u001b[90m\u001b[39;49;00m\n            \u001b[96mTimeoutError\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n            BaseSSLError,\u001b[90m\u001b[39;49;00m\n            CertificateError,\u001b[90m\u001b[39;49;00m\n            SSLError,\u001b[90m\u001b[39;49;00m\n        ) \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n            new_e: \u001b[96mException\u001b[39;49;00m = e\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, (BaseSSLError, CertificateError)):\u001b[90m\u001b[39;49;00m\n                new_e = SSLError(e)\u001b[90m\u001b[39;49;00m\n            \u001b[90m# If the connection didn't successfully connect to it's proxy\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[90m# then there\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n                new_e, (\u001b[96mOSError\u001b[39;49;00m, NewConnectionError, \u001b[96mTimeoutError\u001b[39;49;00m, SSLError)\u001b[90m\u001b[39;49;00m\n            ) \u001b[95mand\u001b[39;49;00m (conn \u001b[95mand\u001b[39;49;00m conn.proxy \u001b[95mand\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m conn.has_connected_to_proxy):\u001b[90m\u001b[39;49;00m\n                new_e = _wrap_proxy_error(new_e, conn.proxy.scheme)\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m new_e\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\u001b[0m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py\u001b[0m:488: SSLError\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\nself = <requests.adapters.HTTPAdapter object at 0x7f0d2837ee30>\nrequest = <PreparedRequest [GET]>, stream = False\ntimeout = Timeout(connect=5, read=5, total=None), verify = True, cert = None\nproxies = OrderedDict()\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92msend\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m, request, stream=\u001b[94mFalse\u001b[39;49;00m, timeout=\u001b[94mNone\u001b[39;49;00m, verify=\u001b[94mTrue\u001b[39;49;00m, cert=\u001b[94mNone\u001b[39;49;00m, proxies=\u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    ):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Sends PreparedRequest object. Returns Response object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\u001b[39;49;00m\n    \u001b[33m    :param stream: (optional) Whether to stream the request content.\u001b[39;49;00m\n    \u001b[33m    :param timeout: (optional) How long to wait for the server to send\u001b[39;49;00m\n    \u001b[33m        data before giving up, as a float, or a :ref:`(connect timeout,\u001b[39;49;00m\n    \u001b[33m        read timeout) <timeouts>` tuple.\u001b[39;49;00m\n    \u001b[33m    :type timeout: float or tuple or urllib3 Timeout object\u001b[39;49;00m\n    \u001b[33m    :param verify: (optional) Either a boolean, in which case it controls whether\u001b[39;49;00m\n    \u001b[33m        we verify the server's TLS certificate, or a string, in which case it\u001b[39;49;00m\n    \u001b[33m        must be a path to a CA bundle to use\u001b[39;49;00m\n    \u001b[33m    :param cert: (optional) Any user-provided SSL certificate to be trusted.\u001b[39;49;00m\n    \u001b[33m    :param proxies: (optional) The proxies dictionary to apply to the request.\u001b[39;49;00m\n    \u001b[33m    :rtype: requests.Response\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            conn = \u001b[96mself\u001b[39;49;00m.get_connection_with_tls_context(\u001b[90m\u001b[39;49;00m\n                request, verify, proxies=proxies, cert=cert\u001b[90m\u001b[39;49;00m\n            )\u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m LocationValueError \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n            \u001b[94mraise\u001b[39;49;00m InvalidURL(e, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.cert_verify(conn, request.url, verify, cert)\u001b[90m\u001b[39;49;00m\n        url = \u001b[96mself\u001b[39;49;00m.request_url(request, proxies)\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.add_headers(\u001b[90m\u001b[39;49;00m\n            request,\u001b[90m\u001b[39;49;00m\n            stream=stream,\u001b[90m\u001b[39;49;00m\n            timeout=timeout,\u001b[90m\u001b[39;49;00m\n            verify=verify,\u001b[90m\u001b[39;49;00m\n            cert=cert,\u001b[90m\u001b[39;49;00m\n            proxies=proxies,\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        chunked = \u001b[95mnot\u001b[39;49;00m (request.body \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m \u001b[95mor\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mContent-Length\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95min\u001b[39;49;00m request.headers)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(timeout, \u001b[96mtuple\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n            \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                connect, read = timeout\u001b[90m\u001b[39;49;00m\n                timeout = TimeoutSauce(connect=connect, read=read)\u001b[90m\u001b[39;49;00m\n            \u001b[94mexcept\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n                    \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mInvalid timeout \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mtimeout\u001b[33m}\u001b[39;49;00m\u001b[33m. Pass a (connect, read) timeout tuple, \u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                    \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mor a single float to set both timeouts to the same value.\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                )\u001b[90m\u001b[39;49;00m\n        \u001b[94melif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(timeout, TimeoutSauce):\u001b[90m\u001b[39;49;00m\n            \u001b[94mpass\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94melse\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            timeout = TimeoutSauce(connect=timeout, read=timeout)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n>           resp = conn.urlopen(\u001b[90m\u001b[39;49;00m\n                method=request.method,\u001b[90m\u001b[39;49;00m\n                url=url,\u001b[90m\u001b[39;49;00m\n                body=request.body,\u001b[90m\u001b[39;49;00m\n                headers=request.headers,\u001b[90m\u001b[39;49;00m\n                redirect=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                assert_same_host=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                preload_content=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                decode_content=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                retries=\u001b[96mself\u001b[39;49;00m.max_retries,\u001b[90m\u001b[39;49;00m\n                timeout=timeout,\u001b[90m\u001b[39;49;00m\n                chunked=chunked,\u001b[90m\u001b[39;49;00m\n            )\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/requests/adapters.py\u001b[0m:667: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py\u001b[0m:841: in urlopen\n    \u001b[0mretries = retries.increment(\u001b[90m\u001b[39;49;00m\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Retry(total=0, connect=None, read=False, redirect=None, status=None)\nmethod = 'GET', url = '/providers.json', response = None\nerror = SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)'))\n_pool = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f0d2837ea70>\n_stacktrace = <traceback object at 0x7f0cf757c740>\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mincrement\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        method: \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        url: \u001b[96mstr\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        response: BaseHTTPResponse | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        error: \u001b[96mException\u001b[39;49;00m | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        _pool: ConnectionPool | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n        _stacktrace: TracebackType | \u001b[94mNone\u001b[39;49;00m = \u001b[94mNone\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n    ) -> Self:\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Return a new Retry object with incremented retry counters.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param response: A response object, or None, if the server did not\u001b[39;49;00m\n    \u001b[33m        return a response.\u001b[39;49;00m\n    \u001b[33m    :type response: :class:`~urllib3.response.BaseHTTPResponse`\u001b[39;49;00m\n    \u001b[33m    :param Exception error: An error encountered during the request, or\u001b[39;49;00m\n    \u001b[33m        None if the response was received successfully.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :return: A new ``Retry`` object.\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.total \u001b[95mis\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m \u001b[95mand\u001b[39;49;00m error:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Disabled, indicate to re-raise the error.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mraise\u001b[39;49;00m reraise(\u001b[96mtype\u001b[39;49;00m(error), error, _stacktrace)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        total = \u001b[96mself\u001b[39;49;00m.total\u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m total \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            total -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        connect = \u001b[96mself\u001b[39;49;00m.connect\u001b[90m\u001b[39;49;00m\n        read = \u001b[96mself\u001b[39;49;00m.read\u001b[90m\u001b[39;49;00m\n        redirect = \u001b[96mself\u001b[39;49;00m.redirect\u001b[90m\u001b[39;49;00m\n        status_count = \u001b[96mself\u001b[39;49;00m.status\u001b[90m\u001b[39;49;00m\n        other = \u001b[96mself\u001b[39;49;00m.other\u001b[90m\u001b[39;49;00m\n        cause = \u001b[33m\"\u001b[39;49;00m\u001b[33munknown\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        status = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        redirect_location = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m error \u001b[95mand\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._is_connection_error(error):\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Connect retry?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m connect \u001b[95mis\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m reraise(\u001b[96mtype\u001b[39;49;00m(error), error, _stacktrace)\u001b[90m\u001b[39;49;00m\n            \u001b[94melif\u001b[39;49;00m connect \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                connect -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94melif\u001b[39;49;00m error \u001b[95mand\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._is_read_error(error):\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Read retry?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m read \u001b[95mis\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m \u001b[95mor\u001b[39;49;00m method \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m \u001b[95mor\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._is_method_retryable(method):\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m reraise(\u001b[96mtype\u001b[39;49;00m(error), error, _stacktrace)\u001b[90m\u001b[39;49;00m\n            \u001b[94melif\u001b[39;49;00m read \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                read -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94melif\u001b[39;49;00m error:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Other retry?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m other \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                other -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94melif\u001b[39;49;00m response \u001b[95mand\u001b[39;49;00m response.get_redirect_location():\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Redirect retry?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m redirect \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                redirect -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            cause = \u001b[33m\"\u001b[39;49;00m\u001b[33mtoo many redirects\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            response_redirect_location = response.get_redirect_location()\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m response_redirect_location:\u001b[90m\u001b[39;49;00m\n                redirect_location = response_redirect_location\u001b[90m\u001b[39;49;00m\n            status = response.status\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94melse\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            \u001b[90m# Incrementing because of a server error like a 500 in\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            \u001b[90m# status_forcelist and the given method is in the allowed_methods\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n            cause = ResponseError.GENERIC_ERROR\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m response \u001b[95mand\u001b[39;49;00m response.status:\u001b[90m\u001b[39;49;00m\n                \u001b[94mif\u001b[39;49;00m status_count \u001b[95mis\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                    status_count -= \u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\u001b[90m\u001b[39;49;00m\n                status = response.status\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        history = \u001b[96mself\u001b[39;49;00m.history + (\u001b[90m\u001b[39;49;00m\n            RequestHistory(method, url, error, status, redirect_location),\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        new_retry = \u001b[96mself\u001b[39;49;00m.new(\u001b[90m\u001b[39;49;00m\n            total=total,\u001b[90m\u001b[39;49;00m\n            connect=connect,\u001b[90m\u001b[39;49;00m\n            read=read,\u001b[90m\u001b[39;49;00m\n            redirect=redirect,\u001b[90m\u001b[39;49;00m\n            status=status_count,\u001b[90m\u001b[39;49;00m\n            other=other,\u001b[90m\u001b[39;49;00m\n            history=history,\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m new_retry.is_exhausted():\u001b[90m\u001b[39;49;00m\n            reason = error \u001b[95mor\u001b[39;49;00m ResponseError(cause)\u001b[90m\u001b[39;49;00m\n>           \u001b[94mraise\u001b[39;49;00m MaxRetryError(_pool, url, reason) \u001b[94mfrom\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[04m\u001b[96mreason\u001b[39;49;00m  \u001b[90m# type: ignore[arg-type]\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE           urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='providers.optimade.org', port=443): Max retries exceeded with url: /providers.json (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)')))\u001b[0m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/urllib3/util/retry.py\u001b[0m:519: MaxRetryError\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\nself = <ext.test_optimade.TestOptimade object at 0x7f0ce6888970>\n\n    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(optimade_providers_down, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mOPTIMADE providers list is down.\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_update_aliases\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n        \u001b[94mwith\u001b[39;49;00m OptimadeRester() \u001b[94mas\u001b[39;49;00m optimade:\u001b[90m\u001b[39;49;00m\n>           optimade.refresh_aliases()\u001b[90m\u001b[39;49;00m\n\n\u001b[1m\u001b[31m/app/repo_to_process/tests/ext/test_optimade.py\u001b[0m:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/ext/optimade.py\u001b[0m:600: in refresh_aliases\n    \u001b[0mjson = \u001b[96mself\u001b[39;49;00m._get_json(providers_url)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/app/repo_to_process/src/pymatgen/ext/optimade.py\u001b[0m:194: in _get_json\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.session.get(url, timeout=\u001b[96mself\u001b[39;49;00m._timeout).json()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/requests/sessions.py\u001b[0m:602: in get\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.request(\u001b[33m\"\u001b[39;49;00m\u001b[33mGET\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, url, **kwargs)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/requests/sessions.py\u001b[0m:589: in request\n    \u001b[0mresp = \u001b[96mself\u001b[39;49;00m.send(prep, **send_kwargs)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/requests/sessions.py\u001b[0m:703: in send\n    \u001b[0mr = adapter.send(request, **kwargs)\u001b[90m\u001b[39;49;00m\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <requests.adapters.HTTPAdapter object at 0x7f0d2837ee30>\nrequest = <PreparedRequest [GET]>, stream = False\ntimeout = Timeout(connect=5, read=5, total=None), verify = True, cert = None\nproxies = OrderedDict()\n\n    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92msend\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m, request, stream=\u001b[94mFalse\u001b[39;49;00m, timeout=\u001b[94mNone\u001b[39;49;00m, verify=\u001b[94mTrue\u001b[39;49;00m, cert=\u001b[94mNone\u001b[39;49;00m, proxies=\u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    ):\u001b[90m\u001b[39;49;00m\n    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"Sends PreparedRequest object. Returns Response object.\u001b[39;49;00m\n    \u001b[33m\u001b[39;49;00m\n    \u001b[33m    :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\u001b[39;49;00m\n    \u001b[33m    :param stream: (optional) Whether to stream the request content.\u001b[39;49;00m\n    \u001b[33m    :param timeout: (optional) How long to wait for the server to send\u001b[39;49;00m\n    \u001b[33m        data before giving up, as a float, or a :ref:`(connect timeout,\u001b[39;49;00m\n    \u001b[33m        read timeout) <timeouts>` tuple.\u001b[39;49;00m\n    \u001b[33m    :type timeout: float or tuple or urllib3 Timeout object\u001b[39;49;00m\n    \u001b[33m    :param verify: (optional) Either a boolean, in which case it controls whether\u001b[39;49;00m\n    \u001b[33m        we verify the server's TLS certificate, or a string, in which case it\u001b[39;49;00m\n    \u001b[33m        must be a path to a CA bundle to use\u001b[39;49;00m\n    \u001b[33m    :param cert: (optional) Any user-provided SSL certificate to be trusted.\u001b[39;49;00m\n    \u001b[33m    :param proxies: (optional) The proxies dictionary to apply to the request.\u001b[39;49;00m\n    \u001b[33m    :rtype: requests.Response\u001b[39;49;00m\n    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            conn = \u001b[96mself\u001b[39;49;00m.get_connection_with_tls_context(\u001b[90m\u001b[39;49;00m\n                request, verify, proxies=proxies, cert=cert\u001b[90m\u001b[39;49;00m\n            )\u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m LocationValueError \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n            \u001b[94mraise\u001b[39;49;00m InvalidURL(e, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.cert_verify(conn, request.url, verify, cert)\u001b[90m\u001b[39;49;00m\n        url = \u001b[96mself\u001b[39;49;00m.request_url(request, proxies)\u001b[90m\u001b[39;49;00m\n        \u001b[96mself\u001b[39;49;00m.add_headers(\u001b[90m\u001b[39;49;00m\n            request,\u001b[90m\u001b[39;49;00m\n            stream=stream,\u001b[90m\u001b[39;49;00m\n            timeout=timeout,\u001b[90m\u001b[39;49;00m\n            verify=verify,\u001b[90m\u001b[39;49;00m\n            cert=cert,\u001b[90m\u001b[39;49;00m\n            proxies=proxies,\u001b[90m\u001b[39;49;00m\n        )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        chunked = \u001b[95mnot\u001b[39;49;00m (request.body \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m \u001b[95mor\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mContent-Length\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95min\u001b[39;49;00m request.headers)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(timeout, \u001b[96mtuple\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n            \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                connect, read = timeout\u001b[90m\u001b[39;49;00m\n                timeout = TimeoutSauce(connect=connect, read=read)\u001b[90m\u001b[39;49;00m\n            \u001b[94mexcept\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n                    \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mInvalid timeout \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mtimeout\u001b[33m}\u001b[39;49;00m\u001b[33m. Pass a (connect, read) timeout tuple, \u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                    \u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mor a single float to set both timeouts to the same value.\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                )\u001b[90m\u001b[39;49;00m\n        \u001b[94melif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(timeout, TimeoutSauce):\u001b[90m\u001b[39;49;00m\n            \u001b[94mpass\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n        \u001b[94melse\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            timeout = TimeoutSauce(connect=timeout, read=timeout)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mtry\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n            resp = conn.urlopen(\u001b[90m\u001b[39;49;00m\n                method=request.method,\u001b[90m\u001b[39;49;00m\n                url=url,\u001b[90m\u001b[39;49;00m\n                body=request.body,\u001b[90m\u001b[39;49;00m\n                headers=request.headers,\u001b[90m\u001b[39;49;00m\n                redirect=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                assert_same_host=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                preload_content=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                decode_content=\u001b[94mFalse\u001b[39;49;00m,\u001b[90m\u001b[39;49;00m\n                retries=\u001b[96mself\u001b[39;49;00m.max_retries,\u001b[90m\u001b[39;49;00m\n                timeout=timeout,\u001b[90m\u001b[39;49;00m\n                chunked=chunked,\u001b[90m\u001b[39;49;00m\n            )\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m (ProtocolError, \u001b[96mOSError\u001b[39;49;00m) \u001b[94mas\u001b[39;49;00m err:\u001b[90m\u001b[39;49;00m\n            \u001b[94mraise\u001b[39;49;00m \u001b[96mConnectionError\u001b[39;49;00m(err, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n        \u001b[94mexcept\u001b[39;49;00m MaxRetryError \u001b[94mas\u001b[39;49;00m e:\u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e.reason, ConnectTimeoutError):\u001b[90m\u001b[39;49;00m\n                \u001b[90m# TODO: Remove this in 3.0.0: see #2811\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e.reason, NewConnectionError):\u001b[90m\u001b[39;49;00m\n                    \u001b[94mraise\u001b[39;49;00m ConnectTimeout(e, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e.reason, ResponseError):\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m RetryError(e, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e.reason, _ProxyError):\u001b[90m\u001b[39;49;00m\n                \u001b[94mraise\u001b[39;49;00m ProxyError(e, request=request)\u001b[90m\u001b[39;49;00m\n    \u001b[90m\u001b[39;49;00m\n            \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e.reason, _SSLError):\u001b[90m\u001b[39;49;00m\n                \u001b[90m# This branch is for urllib3 v1.22 and later.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n>               \u001b[94mraise\u001b[39;49;00m SSLError(e, request=request)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE               requests.exceptions.SSLError: HTTPSConnectionPool(host='providers.optimade.org', port=443): Max retries exceeded with url: /providers.json (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)')))\u001b[0m\n\n\u001b[1m\u001b[31m/usr/local/lib/python3.10/dist-packages/requests/adapters.py\u001b[0m:698: SSLError\n----------------------------- Captured stdout call -----------------------------\nConnecting to all known OPTIMADE providers, this will be slow. Please connect to only the OPTIMADE providers you want to query. Choose from: aflow, alexandria, alexandria.pbe, alexandria.pbesol, cod, cmr, mcloud.mc3d, mcloud.mc2d, mcloud.2dtopo, mcloud.tc-applicability, mcloud.pyrene-mofs, mcloud.curated-cofs, mcloud.stoceriaitf, mcloud.scdm, mcloud.tin-antimony-sulfoiodide, mcloud.optimade-sample, mp, mpdd, mpds, nmd, odbx, odbx.odbx_misc, odbx.gnome, omdb.omdb_production, oqmd, jarvis, tcod, twodmatpedia\nFailed to parse https://aiida.materialscloud.org/mc3d/optimade/v1/info when validating: HTTPSConnectionPool(host='aiida.materialscloud.org', port=443): Read timed out. (read timeout=5)\nFailed to parse https://aiida.materialscloud.org/mc2d/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/2dtopo/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/tc-applicability/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/pyrene-mofs/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/curated-cofs/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/stoceriaitf/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/autowannier/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/tin-antimony-sulfoiodide/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to parse https://aiida.materialscloud.org/optimade-sample/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\nFailed to extract required information from https://optimade.materialsproject.org/v1/info: 'meta'\nFailed to parse http://mpddoptimade.phaseslab.org/v1/info when validating: HTTPConnectionPool(host='mpddoptimade.phaseslab.org', port=80): Read timed out. (read timeout=5)\nFailed to parse https://nomad-lab.eu/prod/rae/optimade/v1/info when validating: HTTPSConnectionPool(host='nomad-lab.eu', port=443): Read timed out. (read timeout=5)\nFailed to parse https://optimade.odbx.science/v1/info when validating: HTTPSConnectionPool(host='optimade.odbx.science', port=443): Read timed out. (read timeout=5)\nFailed to parse https://optimade-gnome.odbx.science/v1/info when validating: HTTPSConnectionPool(host='optimade-gnome.odbx.science', port=443): Read timed out. (read timeout=5)\nFailed to parse https://optimade.openmaterialsdb.se/v1/info when validating: HTTPSConnectionPool(host='optimade.openmaterialsdb.se', port=443): Read timed out. (read timeout=5)\nFailed to parse https://jarvis.nist.gov/optimade/jarvisdft/v1/info when validating: HTTPSConnectionPool(host='jarvis.nist.gov', port=443): Read timed out. (read timeout=5)\nFailed to parse https://www.crystallography.net/tcod/optimade/v1/info when validating: HTTPSConnectionPool(host='www.crystallography.net', port=443): Read timed out. (read timeout=5)\n------------------------------ Captured log call -------------------------------\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:161 Connecting to all known OPTIMADE providers, this will be slow. Please connect to only the OPTIMADE providers you want to query. Choose from: aflow, alexandria, alexandria.pbe, alexandria.pbesol, cod, cmr, mcloud.mc3d, mcloud.mc2d, mcloud.2dtopo, mcloud.tc-applicability, mcloud.pyrene-mofs, mcloud.curated-cofs, mcloud.stoceriaitf, mcloud.scdm, mcloud.tin-antimony-sulfoiodide, mcloud.optimade-sample, mp, mpdd, mpds, nmd, odbx, odbx.odbx_misc, odbx.gnome, omdb.omdb_production, oqmd, jarvis, tcod, twodmatpedia\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/mc3d/optimade/v1/info when validating: HTTPSConnectionPool(host='aiida.materialscloud.org', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/mc2d/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/2dtopo/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/tc-applicability/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/pyrene-mofs/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/curated-cofs/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/stoceriaitf/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/autowannier/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/tin-antimony-sulfoiodide/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://aiida.materialscloud.org/optimade-sample/optimade/v1/info when validating: Expecting value: line 1 column 1 (char 0)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:525 Failed to extract required information from https://optimade.materialsproject.org/v1/info: 'meta'\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse http://mpddoptimade.phaseslab.org/v1/info when validating: HTTPConnectionPool(host='mpddoptimade.phaseslab.org', port=80): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://nomad-lab.eu/prod/rae/optimade/v1/info when validating: HTTPSConnectionPool(host='nomad-lab.eu', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://optimade.odbx.science/v1/info when validating: HTTPSConnectionPool(host='optimade.odbx.science', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://optimade-gnome.odbx.science/v1/info when validating: HTTPSConnectionPool(host='optimade-gnome.odbx.science', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://optimade.openmaterialsdb.se/v1/info when validating: HTTPSConnectionPool(host='optimade.openmaterialsdb.se', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://jarvis.nist.gov/optimade/jarvisdft/v1/info when validating: HTTPSConnectionPool(host='jarvis.nist.gov', port=443): Read timed out. (read timeout=5)\n\u001b[33mWARNING \u001b[0m pymatgen.ext.optimade:optimade.py:513 Failed to parse https://www.crystallography.net/tcod/optimade/v1/info when validating: HTTPSConnectionPool(host='www.crystallography.net', port=443): Read timed out. (read timeout=5)\n\u001b[33m=============================== warnings summary ===============================\u001b[0m\ntests/analysis/chemenv/utils/test_func_utils.py::TestFuncUtils::test_csm_infinite_ratio_function\n  /app/repo_to_process/src/pymatgen/analysis/chemenv/utils/math_utils.py:331: RuntimeWarning: divide by zero encountered in scalar divide\n    return np.where(np.isclose(xx, 0.0), aa * float(\"inf\"), aa * np.power(xx - 1.0, 2) / xx)\n\ntests/analysis/chemenv/utils/test_func_utils.py::TestFuncUtils::test_csm_infinite_ratio_function\n  /app/repo_to_process/src/pymatgen/analysis/chemenv/utils/math_utils.py:349: RuntimeWarning: divide by zero encountered in scalar divide\n    aa * np.power(xx - 1.0, 2) / xx**2.0,\n\ntests/analysis/elasticity/test_elastic.py: 103146 warnings\ntests/analysis/elasticity/test_strain.py: 4 warnings\ntests/analysis/elasticity/test_stress.py: 8 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 16 warnings\ntests/analysis/test_piezo.py: 8 warnings\ntests/core/test_tensors.py: 468 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:369: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 51657 warnings\ntests/analysis/elasticity/test_strain.py: 2 warnings\ntests/analysis/elasticity/test_stress.py: 4 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 8 warnings\ntests/analysis/test_piezo.py: 4 warnings\ntests/core/test_tensors.py: 234 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/_methods.py:64: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 32 warnings\ntests/analysis/elasticity/test_strain.py: 18 warnings\ntests/analysis/elasticity/test_stress.py: 4 warnings\ntests/analysis/test_nmr.py: 4 warnings\ntests/analysis/test_piezo.py: 3 warnings\ntests/core/test_tensors.py: 85 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:725: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 30 warnings\ntests/analysis/elasticity/test_strain.py: 4 warnings\ntests/analysis/elasticity/test_stress.py: 1 warning\ntests/analysis/test_nmr.py: 2 warnings\ntests/core/test_tensors.py: 85 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:726: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 105 warnings\ntests/analysis/elasticity/test_strain.py: 57 warnings\ntests/analysis/elasticity/test_stress.py: 12 warnings\ntests/analysis/test_nmr.py: 12 warnings\ntests/analysis/test_piezo.py: 9 warnings\ntests/core/test_tensors.py: 258 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:738: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 2508 warnings\ntests/analysis/elasticity/test_strain.py: 14162 warnings\ntests/analysis/elasticity/test_stress.py: 17 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 159 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 888 warnings\ntests/analysis/test_nmr.py: 16 warnings\ntests/analysis/test_piezo.py: 18 warnings\ntests/core/test_tensors.py: 1633 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/_methods.py:73: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 62 warnings\ntests/analysis/elasticity/test_strain.py: 22 warnings\ntests/analysis/elasticity/test_stress.py: 5 warnings\ntests/analysis/test_nmr.py: 6 warnings\ntests/analysis/test_piezo.py: 3 warnings\ntests/core/test_tensors.py: 170 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:780: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 30 warnings\ntests/analysis/elasticity/test_strain.py: 4 warnings\ntests/analysis/elasticity/test_stress.py: 1 warning\ntests/analysis/test_nmr.py: 2 warnings\ntests/core/test_tensors.py: 85 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:779: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 62 warnings\ntests/analysis/elasticity/test_strain.py: 22 warnings\ntests/analysis/elasticity/test_stress.py: 5 warnings\ntests/analysis/test_nmr.py: 6 warnings\ntests/analysis/test_piezo.py: 3 warnings\ntests/core/test_tensors.py: 170 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:783: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 30 warnings\ntests/analysis/elasticity/test_strain.py: 4 warnings\ntests/analysis/elasticity/test_stress.py: 1 warning\ntests/analysis/test_nmr.py: 2 warnings\ntests/core/test_tensors.py: 85 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:782: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 60 warnings\ntests/analysis/elasticity/test_strain.py: 8 warnings\ntests/analysis/elasticity/test_stress.py: 2 warnings\ntests/analysis/test_nmr.py: 4 warnings\ntests/core/test_tensors.py: 170 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:807: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 19049 warnings\ntests/analysis/elasticity/test_strain.py: 112795 warnings\ntests/analysis/elasticity/test_stress.py: 31 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 1272 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 7104 warnings\ntests/analysis/test_nmr.py: 10 warnings\ntests/analysis/test_piezo.py: 63 warnings\ntests/core/test_tensors.py: 10985 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/numeric.py:2417: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 2378 warnings\ntests/analysis/elasticity/test_strain.py: 14090 warnings\ntests/analysis/elasticity/test_stress.py: 2 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 159 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 888 warnings\ntests/analysis/test_piezo.py: 6 warnings\ntests/core/test_tensors.py: 1370 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/numeric.py:2418: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 2383 warnings\ntests/analysis/elasticity/test_strain.py: 14105 warnings\ntests/analysis/elasticity/test_stress.py: 5 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 159 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 888 warnings\ntests/analysis/test_nmr.py: 2 warnings\ntests/analysis/test_piezo.py: 9 warnings\ntests/core/test_tensors.py: 1375 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/numeric.py:2419: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 132 warnings\ntests/analysis/elasticity/test_strain.py: 60 warnings\ntests/analysis/elasticity/test_stress.py: 13 warnings\ntests/analysis/test_nmr.py: 6 warnings\ntests/analysis/test_piezo.py: 9 warnings\ntests/core/test_tensors.py: 342 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/numeric.py:2421: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 35 warnings\ntests/analysis/elasticity/test_strain.py: 19 warnings\ntests/analysis/elasticity/test_stress.py: 4 warnings\ntests/analysis/test_nmr.py: 4 warnings\ntests/analysis/test_piezo.py: 3 warnings\ntests/core/test_tensors.py: 86 warnings\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:816: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 7044 warnings\ntests/analysis/elasticity/test_strain.py: 246 warnings\ntests/analysis/elasticity/test_stress.py: 3 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 360 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 1776 warnings\ntests/analysis/test_nmr.py: 15 warnings\ntests/core/test_tensors.py: 215 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:292: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 52 warnings\ntests/analysis/elasticity/test_strain.py: 40 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 162 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 592 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/strain.py:196: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 12 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/elastic.py:482: UserWarning:\n  \n  Tensor is not symmetric, information may be lost in Voigt conversion.\n\ntests/analysis/elasticity/test_elastic.py: 2518 warnings\ntests/core/test_tensors.py: 54 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:110: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py::TestElasticTensor::test_from_independent_strains\n  /app/repo_to_process/tests/analysis/elasticity/test_elastic.py:228: UserWarning:\n  \n  Extra strain states in strain-stress pairs are neglected in independent strain fitting\n\ntests/analysis/elasticity/test_elastic.py: 5 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 296 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/elastic.py:92: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 5 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 81 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 592 warnings\ntests/core/test_tensors.py: 1 warning\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/_methods.py:52: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 40 warnings\ntests/core/test_tensors.py: 8 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:633: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 7680 warnings\ntests/core/test_tensors.py: 1536 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:637: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 7680 warnings\ntests/core/test_tensors.py: 1536 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:638: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 7680 warnings\ntests/core/test_tensors.py: 1536 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:639: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 3840 warnings\ntests/core/test_tensors.py: 768 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:640: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 7680 warnings\ntests/core/test_tensors.py: 1536 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:641: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 3860 warnings\ntests/core/test_tensors.py: 2788 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:332: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 40 warnings\ntests/core/test_tensors.py: 8 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:669: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 20 warnings\ntests/core/test_tensors.py: 4 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:670: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 11 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/elastic.py:584: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 2 warnings\ntests/analysis/interfaces/test_coherent_interface.py: 81 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 296 warnings\ntests/core/test_tensors.py: 1 warning\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/fromnumeric.py:1837: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 28 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/elastic.py:742: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_elastic.py: 336 warnings\n  /app/repo_to_process/tests/analysis/elasticity/test_elastic.py:520: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\ntests/analysis/elasticity/test_strain.py::TestDeformation::test_independence\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/strain.py:63: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_strain.py: 108 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/strain.py:253: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/stress.py:70: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/stress.py:77: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/stress.py:89: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/elasticity/test_stress.py::TestStress::test_properties\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/stress.py:101: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/interfaces/test_coherent_interface.py: 81 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 296 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/strain.py:235: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/interfaces/test_coherent_interface.py: 81 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 296 warnings\n  /app/repo_to_process/src/pymatgen/analysis/elasticity/strain.py:237: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/interfaces/test_coherent_interface.py: 78 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 592 warnings\ntests/core/test_tensors.py: 82 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:1025: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/interfaces/test_coherent_interface.py: 78 warnings\ntests/analysis/interfaces/test_substrate_analyzer.py: 592 warnings\ntests/core/test_tensors.py: 82 warnings\n  /app/repo_to_process/src/pymatgen/core/tensors.py:996: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_graphs.py: 18 warnings\ntests/command_line/test_critic2_caller.py: 5 warnings\n  /app/repo_to_process/src/pymatgen/command_line/critic2_caller.py:489: DeprecationWarning:\n  \n  Parsing critic2 standard output is deprecated and will not be maintained, please use the native JSON output in the future.\n\ntests/analysis/test_interface_reactions.py: 24 warnings\n  /app/repo_to_process/tests/analysis/test_interface_reactions.py:367: DeprecationWarning:\n  \n  Arrays of 2-dimensional vectors are deprecated. Use arrays of 3-dimensional vectors instead. (deprecated in NumPy 2.0)\n\ntests/analysis/test_nmr.py::TestChemicalShieldingNotation::test_principal_axis_system\ntests/analysis/test_nmr.py::TestElectricFieldGradient::test_principal_axis_system\n  /usr/local/lib/python3.10/dist-packages/numpy/testing/_private/utils.py:815: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_nmr.py::TestChemicalShieldingNotation::test_notations\n  /app/repo_to_process/src/pymatgen/analysis/nmr.py:91: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_nmr.py::TestChemicalShieldingNotation::test_notations\n  /app/repo_to_process/src/pymatgen/analysis/nmr.py:104: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_nmr.py::TestChemicalShieldingNotation::test_notations\n  /app/repo_to_process/src/pymatgen/analysis/nmr.py:112: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_optics.py::test_dielectric_analysis\n  /app/repo_to_process/src/pymatgen/analysis/optics.py:65: RuntimeWarning:\n  \n  divide by zero encountered in divide\n\ntests/analysis/test_optics.py::test_dielectric_analysis\n  /app/repo_to_process/src/pymatgen/analysis/optics.py:72: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/analysis/test_piezo_sensitivity.py: 44 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:126: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 44 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:145: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 42 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:243: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 49 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:244: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 72 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:385: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 354 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:387: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 72 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:388: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 36 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:396: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 624 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:393: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 354 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:437: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 72 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:439: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 36 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:449: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 624 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:446: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 5310 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:568: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 1080 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:571: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 540 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:581: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_piezo_sensitivity.py: 9360 warnings\n  /app/repo_to_process/src/pymatgen/analysis/piezo_sensitivity.py:578: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/analysis/test_quasirrho.py::TestQuasiRRHO::test_extreme_temperature_and_pressure\n  /app/repo_to_process/src/pymatgen/analysis/quasirrho.py:243: RuntimeWarning:\n  \n  overflow encountered in exp\n\ntests/analysis/test_quasirrho.py::TestQuasiRRHO::test_extreme_temperature_and_pressure\n  /app/repo_to_process/src/pymatgen/analysis/quasirrho.py:244: RuntimeWarning:\n  \n  overflow encountered in exp\n\ntests/analysis/test_surface_analysis.py::TestSurfaceEnergyPlotter::test_monolayer_vs_BE\ntests/analysis/test_surface_analysis.py::TestSurfaceEnergyPlotter::test_monolayer_vs_BE\ntests/analysis/test_surface_analysis.py::TestSurfaceEnergyPlotter::test_monolayer_vs_BE\ntests/analysis/test_surface_analysis.py::TestSurfaceEnergyPlotter::test_monolayer_vs_BE\n  /app/repo_to_process/src/pymatgen/analysis/surface_analysis.py:1046: MatplotlibDeprecationWarning:\n  \n  Passing label as a length 3 sequence when plotting a single dataset is deprecated in Matplotlib 3.9 and will error in 3.11.  To keep the current behavior, cast the sequence to string before passing.\n\ntests/analysis/test_transition_state.py::TestNEBAnalysis::test_get_plot\n  /app/repo_to_process/src/pymatgen/util/plotting.py:61: RuntimeWarning:\n  \n  More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.\n\ntests/core/test_structure.py::TestStructure::test_rotate_sites\n  /app/repo_to_process/src/pymatgen/core/structure.py:4732: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/core/test_tensors.py: 18 warnings\n  /app/repo_to_process/tests/core/test_tensors.py:206: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\ntests/core/test_tensors.py::TestTensor::test_convert_to_ieee\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/_methods.py:44: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestTensor::test_round\n  /app/repo_to_process/tests/core/test_tensors.py:375: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestTensor::test_round\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/fromnumeric.py:48: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestTensorCollection::test_list_based_functions\n  /app/repo_to_process/tests/core/test_tensors.py:408: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestSquareTensor::test_properties\ntests/core/test_tensors.py::TestSquareTensor::test_properties\n  /app/repo_to_process/tests/core/test_tensors.py:523: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestSquareTensor::test_refine_rotation\n  /app/repo_to_process/tests/core/test_tensors.py:555: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/core/test_tensors.py::TestSquareTensor::test_get_scaled\n  /app/repo_to_process/src/pymatgen/core/tensors.py:1007: DeprecationWarning:\n  \n  __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n\ntests/electronic_structure/test_dos.py::TestFermiDos::test_doping_fermi\n  /app/repo_to_process/src/pymatgen/electronic_structure/dos.py:530: RuntimeWarning:\n  \n  divide by zero encountered in divide\n\ntests/io/abinit/test_netcdf.py::TestAbinitHeader::test_api\n  /app/repo_to_process/tests/io/abinit/test_netcdf.py:125: FutureWarning:\n  \n  to_string is deprecated; use to_str in pymatgen.io.abinit.netcdf instead.\n\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_dft_set\ntests/io/cp2k/test_sets.py::TestDftSet::test_cell_parameters\ntests/io/cp2k/test_sets.py::TestDftSet::test_cell_parameters\n  /app/repo_to_process/src/pymatgen/io/cp2k/sets.py:444: PendingDeprecationWarning:\n  \n  \n  you should no longer specify 'unsafe'.\n  For **dumping only** use yaml=YAML(typ='full')\n\ntests/io/lammps/test_data.py::TestLammpsData::test_get_str\ntests/io/lammps/test_data.py::TestLammpsData::test_write_file\ntests/io/lammps/test_data.py::TestLammpsData::test_write_file\ntests/io/lammps/test_data.py::TestCombinedData::test_get_str\ntests/io/lammps/test_data.py::TestCombinedData::test_as_lammpsdata\n  /usr/local/lib/python3.10/dist-packages/numpy/_core/fromnumeric.py:57: FutureWarning:\n  \n  'DataFrame.swapaxes' is deprecated and will be removed in a future version. Please use 'DataFrame.transpose' instead.\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_runtype\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:164: UnconvergedVASPWarning:\n  \n  /app/repo_to_process/src/../tests/files/io/vasp/outputs/vasprun.hse06.xml.gz is an unconverged VASP run.\n  Electronic convergence reached: False.\n  Ionic convergence reached: True.\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_runtype\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:170: UnconvergedVASPWarning:\n  \n  /app/repo_to_process/src/../tests/files/io/vasp/outputs/vasprun.dfpt.ionic.xml.gz is an unconverged VASP run.\n  Electronic convergence reached: True.\n  Ionic convergence reached: False.\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_standard\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:243: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_standard\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:248: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_standard\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:253: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_standard\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:261: RuntimeWarning:\n  \n  invalid value encountered in divide\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_dfpt_ionic\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:372: UnconvergedVASPWarning:\n  \n  /app/repo_to_process/src/../tests/files/io/vasp/outputs/vasprun.dfpt.ionic.xml.gz is an unconverged VASP run.\n  Electronic convergence reached: True.\n  Ionic convergence reached: False.\n\ntests/io/vasp/test_outputs.py::TestVasprun::test_dfpt_unconverged\n  /app/repo_to_process/tests/io/vasp/test_outputs.py:379: UnconvergedVASPWarning:\n  \n  /app/repo_to_process/src/../tests/files/io/vasp/outputs/vasprun.dfpt.unconverged.xml.gz is an unconverged VASP run.\n  Electronic convergence reached: False.\n  Ionic convergence reached: True.\n\ntests/io/vasp/test_outputs.py::TestWavecar::test_standard\n  /app/repo_to_process/src/pymatgen/io/vasp/outputs.py:5055: RuntimeWarning:\n  \n  invalid value encountered in cast\n\ntests/phonon/test_plotter.py::TestPhononBSPlotter::test_proj_plot\n  /app/repo_to_process/src/pymatgen/phonon/plotter.py:515: RuntimeWarning:\n  \n  More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.\n\ntests/util/test_plotting.py::TestFunc::test_plot_periodic_heatmap\ntests/util/test_plotting.py::TestFunc::test_plot_periodic_heatmap\ntests/util/test_plotting.py::TestFunc::test_plot_periodic_heatmap\ntests/util/test_plotting.py::TestFunc::test_plot_periodic_heatmap\n  /app/repo_to_process/src/pymatgen/util/plotting.py:350: MatplotlibDeprecationWarning:\n  \n  Getting the array from a PolyQuadMesh will return the full array in the future (uncompressed). To get this behavior now set the PolyQuadMesh with a 2D array .set_array(data2d).\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================================== XPASSES ====================================\n============================= slowest 30 durations =============================\n90.04s call     tests/ext/test_optimade.py::TestOptimade::test_update_aliases\n52.38s call     tests/transformations/test_advanced_transformations.py::TestCubicSupercellTransformation::test_apply_transformation_orthorhombic_supercell\n37.84s call     tests/electronic_structure/test_plotter.py::TestBSPlotterProjected::test_methods\n26.34s call     tests/symmetry/test_kpath_lm.py::TestKPathLatimerMunro::test_kpath_generation\n24.66s call     tests/io/test_phonopy.py::TestGruneisen::test_gruneisen_parameter\n19.29s call     tests/analysis/elasticity/test_elastic.py::TestDiffFit::test_fit\n17.39s call     tests/analysis/test_structure_analyzer.py::TestMiscFunction::test_average_coordination_number\n15.44s call     tests/core/test_surface.py::TestSlab::test_symmetrization\n14.44s call     tests/io/vasp/test_optics.py::TestVasprun::test_optics\n13.59s call     tests/core/test_surface.py::TestSlabGenerator::test_non_stoichiometric_symmetrized_slab\n12.18s call     tests/entries/test_entry_tools.py::TestEntrySet::test_ground_states\n11.97s call     tests/core/test_surface.py::TestSlab::test_get_symmetric_sites\n11.73s call     tests/analysis/elasticity/test_elastic.py::TestElasticTensorExpansion::test_get_yield_stress\n10.95s setup    tests/io/lammps/test_data.py::TestCombinedData::test_from_files\n10.54s call     tests/symmetry/test_groups.py::TestSpaceGroup::test_order_symm_ops\n10.40s call     tests/core/test_surface.py::TestMillerIndexFinder::test_generate_all_slabs\n9.81s call     tests/io/vasp/test_outputs.py::TestVasprun::test_vasprun_soc\n9.59s call     tests/io/vasp/test_outputs.py::TestVasprun::test_runtype\n9.10s call     tests/symmetry/test_kpath_sc.py::TestBandStructureSC::test_kpath_generation\n9.05s call     tests/analysis/test_transition_state.py::TestNEBAnalysis::test_get_plot\n8.93s call     tests/core/test_trajectory.py::TestTrajectory::test_extend\n8.85s call     tests/analysis/test_transition_state.py::TestNEBAnalysis::test_run\n8.64s call     tests/analysis/test_transition_state.py::TestNEBAnalysis::test_combine_neb_plots\n8.51s call     tests/cli/test_pmg_plot.py::test_plot_chgint\n8.51s call     tests/core/test_trajectory.py::TestTrajectory::test_xdatcar_write\n8.42s call     tests/core/test_trajectory.py::TestTrajectory::test_conversion\n8.42s call     tests/io/test_common.py::TestPMGDir::test_getitem\n8.30s call     tests/analysis/topological/test_spillage.py::TestSolar::test_spillage_from_vasprun\n7.81s call     tests/io/qchem/test_outputs.py::TestQCOutput::test_nbo7_infinite_e2pert\n7.75s call     tests/io/test_phonopy.py::TestGruneisen::test_ph_bs_symm_line\n\u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n\u001b[33mXFAIL\u001b[0m tests/analysis/chemenv/coordination_environments/test_coordination_geometry_finder.py::\u001b[1mTestCoordinationGeometryFinder::test_simplest_chemenv_strategy\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/chemenv/coordination_environments/test_coordination_geometry_finder.py::\u001b[1mTestCoordinationGeometryFinder::test_simple_abundance_chemenv_strategy\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_graphs.py::\u001b[1mTestStructureGraph::test_str\u001b[0m - Need someone to fix this, see issue 4206\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_molecule_structure_comparator.py::\u001b[1mTestMoleculeStructureComparator::test_structural_change_in_geom_opt\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_surface_analysis.py::\u001b[1mTestSurfaceEnergyPlotter::test_area_frac_vs_chempot_plot\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_surface_analysis.py::\u001b[1mTestSurfaceEnergyPlotter::test_chempot_vs_gamma_clean\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_surface_analysis.py::\u001b[1mTestSurfaceEnergyPlotter::test_chempot_vs_gamma_facet\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/analysis/test_surface_analysis.py::\u001b[1mTestSurfaceEnergyPlotter::test_surface_chempot_range_map\u001b[0m - TODO: need someone to fix this\n\u001b[33mXFAIL\u001b[0m tests/core/test_surface.py::\u001b[1mTestReconstructionGenerator::test_previous_reconstructions\u001b[0m - This test relies on neighbor orders and is hard coded. Disable temporarily\n\u001b[33mXFAIL\u001b[0m tests/core/test_xcfunc.py::\u001b[1mTestLibxcFunc::test_msonable\u001b[0m - TODO:\n\u001b[33mXFAIL\u001b[0m tests/io/vasp/test_sets.py::\u001b[1mTestMVLScanRelaxSet::test_potcar_need_fix\u001b[0m - TODO: need someone to fix this\n\u001b[33mXPASS\u001b[0m tests/analysis/test_surface_analysis.py::\u001b[1mTestSurfaceEnergyPlotter::test_monolayer_vs_BE\u001b[0m - TODO: need someone to fix this\n\u001b[33mXPASS\u001b[0m tests/io/vasp/test_inputs.py::\u001b[1mTestPotcar::test_default_functional\u001b[0m - TODO: need someone to fix this\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_functional_groups.py:15: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_gulp_caller.py:38: GULP not available\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap2.py:25: No boltztrap2\n\u001b[33mSKIPPED\u001b[0m [1] tests/ext/test_cod.py:24: www.crystallography.net is down\n\u001b[33mSKIPPED\u001b[0m [1] tests/ext/test_matproj.py:24: MP API is down\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_ase.py:16: ase not installed\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_babel.py:16: could not import 'openbabel.pybel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_openff.py:25: could not import 'openff.toolkit': No module named 'openff'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_packmol.py:24: packmol executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_shengbte.py:10: could not import 'f90nml': No module named 'f90nml'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_zeopp.py:19: neither zeo nor pyzeo is installed\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_help.py:11: could not import 'bs4': No module named 'bs4'\n\u001b[33mSKIPPED\u001b[0m [1] tests/performance/test_import_time.py:32: ref time only comparable in CI runner\n\u001b[33mSKIPPED\u001b[0m [1] tests/symmetry/test_kpath_hin.py:11: seekpath not installed\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/magnetism/test_analyzer.py:263: enumlib not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/magnetism/test_analyzer.py:299: enumlib not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_bond_dissociation.py:533: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_bond_dissociation.py:538: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_bond_dissociation.py:544: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:68: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:74: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:83: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:111: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:117: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_fragmenter.py:161: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_graphs.py:350: graphviz executables not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_graphs.py:591: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_local_env.py:310: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_local_env.py:322: could not import 'openbabel': No module named 'openbabel'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_local_env.py:1367: critic2 executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:151: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:156: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:163: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:175: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:242: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:249: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:256: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_molecule_matcher.py:263: OBAlign is missing, Skipping\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_piezo_sensitivity.py:216: could not import 'phonopy': No module named 'phonopy'\n\u001b[33mSKIPPED\u001b[0m [1] tests/analysis/test_piezo_sensitivity.py:270: could not import 'phonopy': No module named 'phonopy'\n\u001b[33mSKIPPED\u001b[0m [7] tests/analysis/test_prototypes.py:345: AFLOW CLI not installed\n\u001b[33mSKIPPED\u001b[0m [8] tests/analysis/test_prototypes.py:360: pyxtal not installed\n\u001b[33mSKIPPED\u001b[0m [16] tests/analysis/test_prototypes.py:376: pyxtal not installed\n\u001b[33mSKIPPED\u001b[0m [8] tests/analysis/test_prototypes.py:390: pyxtal not installed\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_bader_caller.py:23: bader executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_bader_caller.py:66: bader executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_bader_caller.py:84: bader executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_bader_caller.py:119: bader executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_bader_caller.py:136: bader executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_critic2_caller.py:25: critic2 executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_critic2_caller.py:61: critic2 executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_enumlib_caller.py:24: enumlib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_enumlib_caller.py:80: enumlib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_enumlib_caller.py:92: enumlib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_enumlib_caller.py:122: enumlib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:28: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:51: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:59: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:67: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:77: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:89: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_mcsqs_caller.py:101: mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/command_line/test_vampire_caller.py:34: vampire executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:109: enumlib or mcsqs executable not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:717: Only run this in CI tests\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:963: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:995: could not import 'moyopy': No module named 'moyopy'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1047: could not import 'matcalc': No module named 'matcalc'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1051: PMG_MAPI_KEY environment variable not set or MP API is down. This is also the case in a PR.\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1958: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1969: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1981: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:1994: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2014: could not import 'matgl': No module named 'matgl'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2025: could not import 'matgl': No module named 'matgl'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2039: could not import 'matgl': No module named 'matgl'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2047: could not import 'matgl': No module named 'matgl'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2107: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2437: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2645: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2655: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2667: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2684: could not import 'tblite': No module named 'tblite'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2694: could not import 'tblite': No module named 'tblite'\n\u001b[33mSKIPPED\u001b[0m [1] tests/core/test_structure.py:2704: could not import 'ase': No module named 'ase'\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:40: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:83: No FDINT\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:98: No FDINT\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:113: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:120: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:129: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:138: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:154: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:166: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:196: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:200: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:204: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:218: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:229: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:238: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_boltztrap.py:251: No x_trans.\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:310: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:317: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:325: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:332: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:339: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:346: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:353: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:360: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:367: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:374: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:381: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:388: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:395: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:402: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:410: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:417: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:424: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:431: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/electronic_structure/test_plotter.py:438: No x_trans executable found\n\u001b[33mSKIPPED\u001b[0m [1] tests/ext/test_optimade.py:81: At least one MC OPTIMADE API is down.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/abinit/test_netcdf.py:30: Requires Netcdf4\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/abinit/test_netcdf.py:86: Requires Netcdf4\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/pwmat/test_inputs.py:88: could not import 'seekpath': No module named 'seekpath'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/pwmat/test_inputs.py:97: could not import 'seekpath': No module named 'seekpath'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/pwmat/test_inputs.py:113: could not import 'seekpath': No module named 'seekpath'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/pwmat/test_inputs.py:123: could not import 'seekpath': No module named 'seekpath'\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/qchem/test_outputs.py:316: OpenBabel not installed.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/qchem/test_outputs.py:350: OpenBabel not installed.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_jarvis.py:12: JARVIS-tools not loaded.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_jarvis.py:20: JARVIS-tools not loaded.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:99: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:127: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:168: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:181: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:194: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/test_phonopy.py:243: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_outputs.py:1666: h5py required for HDF5 support.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_outputs.py:2291: h5py must be installed to use the .Vaspout class.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_outputs.py:2306: h5py must be installed to use the .Vaspout class.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_outputs.py:2328: h5py must be installed to use the .Vaspout class.\n\u001b[33mSKIPPED\u001b[0m [1] tests/io/vasp/test_outputs.py:2337: h5py must be installed to use the .Vaspout class.\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:94: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:99: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:103: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:108: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:112: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:116: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:120: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:123: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:130: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:135: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/phonon/test_gruneisen.py:139: Phonopy not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/symmetry/test_kpaths.py:21: No seek path present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:97: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:158: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:188: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:207: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:237: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:249: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:304: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:334: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:342: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:352: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:364: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:492: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:540: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:549: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:607: mcsqs not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:617: mcsqs not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:638: mcsqs not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:656: icet not installed.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:670: icet not installed.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:681: icet not installed.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_advanced_transformations.py:874: hiphive not present\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_site_transformations.py:213: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_standard_transformations.py:239: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_standard_transformations.py:256: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_standard_transformations.py:274: enum_lib not present.\n\u001b[33mSKIPPED\u001b[0m [1] tests/transformations/test_standard_transformations.py:280: enum_lib not present.\n\u001b[31m\u001b[31m\u001b[1m12 failed\u001b[0m, \u001b[32m2798 passed\u001b[0m, \u001b[33m215 skipped\u001b[0m, \u001b[33m11 xfailed\u001b[0m, \u001b[33m2 xpassed\u001b[0m, \u001b[33m450835 warnings\u001b[0m\u001b[31m in 1210.59s (0:20:10)\u001b[0m\u001b[0m\n",
    "stderr": "",
    "execution_time": 1238.9787747859955
  }
]