[
  {
    "command": "pip install pytest-cov",
    "success": true,
    "stdout": "Looking in indexes: https://repo.huaweicloud.com/repository/pypi/simple/\nCollecting pytest-cov\n  Downloading https://repo.huaweicloud.com/repository/pypi/packages/bc/16/4ea354101abb1287856baa4af2732be351c7bee728065aed451b678153fd/pytest_cov-6.2.1-py3-none-any.whl (24 kB)\nRequirement already satisfied: pytest>=6.2.5 in /usr/local/lib/python3.10/dist-packages (from pytest-cov) (8.4.1)\nCollecting coverage>=7.5 (from coverage[toml]>=7.5->pytest-cov)\n  Downloading https://repo.huaweicloud.com/repository/pypi/packages/b9/8e/5a8835fb0122a2e2a108bf3527931693c4625fdc4d953950a480b9625852/coverage-7.10.2-cp310-cp310-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl (243 kB)\nRequirement already satisfied: pluggy>=1.2 in /usr/local/lib/python3.10/dist-packages (from pytest-cov) (1.6.0)\nRequirement already satisfied: tomli in /usr/local/lib/python3.10/dist-packages (from coverage[toml]>=7.5->pytest-cov) (2.2.1)\nRequirement already satisfied: exceptiongroup>=1 in /usr/local/lib/python3.10/dist-packages (from pytest>=6.2.5->pytest-cov) (1.3.0)\nRequirement already satisfied: iniconfig>=1 in /usr/local/lib/python3.10/dist-packages (from pytest>=6.2.5->pytest-cov) (2.1.0)\nRequirement already satisfied: packaging>=20 in /usr/local/lib/python3.10/dist-packages (from pytest>=6.2.5->pytest-cov) (25.0)\nRequirement already satisfied: pygments>=2.7.2 in /usr/local/lib/python3.10/dist-packages (from pytest>=6.2.5->pytest-cov) (2.19.2)\nRequirement already satisfied: typing-extensions>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from exceptiongroup>=1->pytest>=6.2.5->pytest-cov) (4.14.1)\nInstalling collected packages: coverage, pytest-cov\n\nSuccessfully installed coverage-7.10.2 pytest-cov-6.2.1\n",
    "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.\n",
    "execution_time": 2.198033571243286
  },
  {
    "command": "pytest",
    "success": false,
    "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.4.1, pluggy-1.6.0\nrootdir: /app/repo_to_process\nconfigfile: pyproject.toml\nplugins: cov-6.2.1\ncollected 88 items\n\ntests/test_bayesian.py .F.                                               [  3%]\ntests/test_circular.py ........                                          [ 12%]\ntests/test_config.py .                                                   [ 13%]\ntests/test_contingency.py ....                                           [ 18%]\ntests/test_correlation.py F\n\n=================================== FAILURES ===================================\n____________________ TestBayesian.test_bayesfactor_pearson _____________________\n\nself = <tests.test_bayesian.TestBayesian testMethod=test_bayesfactor_pearson>\n\n    def test_bayesfactor_pearson(self):\n        \"\"\"Test function bayesfactor_pearson.\"\"\"\n        # Compare the analytical solution to JASP / R (method='ly')\n        # Similar to JASP with kappa=1, or correlationBF with rscale='wide'\n        # check for approximate equality with 1e-3 tolerance\n        # (as this is how we store the values here)\n        assert bfp(0.1, 83) == appr(0.204)\n        assert bfp(-0.1, 83) == appr(0.204)\n>       assert bfp(0.1, 83, alternative=\"greater\") == appr(0.332)\n\nself       = <tests.test_bayesian.TestBayesian testMethod=test_bayesfactor_pearson>\n\ntests/test_bayesian.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.10/dist-packages/pingouin/bayesian.py:326: in bayesfactor_pearson\n    _is_mpmath_installed(raise_error=True)\n        _is_mpmath_installed = <function _is_mpmath_installed at 0x7f69fbe79000>\n        alternative = 'greater'\n        betaln     = <ufunc 'betaln'>\n        bf10       = 0.20410453126209943\n        gamma      = <ufunc 'gamma'>\n        hyp2f1     = <ufunc 'hyp2f1'>\n        k          = 1.0\n        kappa      = 1.0\n        lbeta      = np.float64(0.0)\n        log_hyperterm = 0.3975179183614662\n        method     = 'ly'\n        n          = 83\n        r          = 0.1\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nraise_error = True\n\n    def _is_mpmath_installed(raise_error=False):\n        \"\"\"Check if mpmath is installed.\"\"\"\n        try:\n>           import mpmath  # noqa\nE           ModuleNotFoundError: No module named 'mpmath'\n\nraise_error = True\n\n/usr/local/lib/python3.10/dist-packages/pingouin/utils.py:426: ModuleNotFoundError\n__________________________ TestCorrelation.test_corr ___________________________\n\nself = <tests.test_correlation.TestCorrelation testMethod=test_corr>\n\n    def test_corr(self):\n        \"\"\"Test function corr\n    \n        Compare to R `correlation` package. See test_correlation.R file.\n        \"\"\"\n        np.random.seed(123)\n        mean, cov = [4, 6], [(1, 0.6), (0.6, 1)]\n        x, y = np.random.multivariate_normal(mean, cov, 30).T\n        x2, y2 = x.copy(), y.copy()\n        x[3], y[5] = 12, -8\n        x2[3], y2[5] = 7, 2.6\n    \n        # Pearson correlation\n        stats = corr(x, y, method=\"pearson\")\n        assert np.isclose(stats.loc[\"pearson\", \"r\"], 0.1761221)\n        assert np.isclose(stats.loc[\"pearson\", \"p_val\"], 0.3518659)\n        assert stats.loc[\"pearson\", \"CI95\"][0] == round(-0.1966232, 2)\n        assert stats.loc[\"pearson\", \"CI95\"][1] == round(0.5043872, 2)\n        # - One-sided: greater\n>       stats = corr(x, y, method=\"pearson\", alternative=\"greater\")\n\ncov        = [(1, 0.6), (0.6, 1)]\nmean       = [4, 6]\nself       = <tests.test_correlation.TestCorrelation testMethod=test_corr>\nstats      =           n         r         CI95     p_val   BF10     power\npearson  30  0.176122  [-0.2, 0.5]  0.351866  0.343  0.154803\nx          = array([ 4.52499109,  4.42053181,  3.77897093, 12.        ,  3.25533028,\n        4.64956937,  2.95178623,  4.59135733, ...301762,  3.7024475 ,  1.67554352,  2.12366377,\n        5.62202531,  2.79728088,  3.49523787,  2.41851903,  2.18400827])\nx2         = array([4.52499109, 4.42053181, 3.77897093, 7.        , 3.25533028,\n       4.64956937, 2.95178623, 4.59135733, 1.048995...  , 4.09301762, 3.7024475 , 1.67554352, 2.12366377,\n       5.62202531, 2.79728088, 3.49523787, 2.41851903, 2.18400827])\ny          = array([ 7.41704397,  5.07326086,  7.25606067,  7.97867234,  4.4800941 ,\n       -8.        ,  4.38033491,  6.20286174, ...624519,  5.69186599,  4.04486339,  6.12552003,\n        6.69290489,  4.08347187,  6.45166315,  5.98813694,  5.14050216])\ny2         = array([7.41704397, 5.07326086, 7.25606067, 7.97867234, 4.4800941 ,\n       2.6       , 4.38033491, 6.20286174, 5.004916...43, 6.60624519, 5.69186599, 4.04486339, 6.12552003,\n       6.69290489, 4.08347187, 6.45166315, 5.98813694, 5.14050216])\n\ntests/test_correlation.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.10/dist-packages/pingouin/correlation.py:666: in corr\n    stats[\"BF10\"] = bayesfactor_pearson(r, n_clean, alternative=alternative)\n        alternative = 'greater'\n        ci         = array([-0.137694,  1.      ])\n        kwargs     = {}\n        method     = 'pearson'\n        n          = 30\n        n_clean    = 30\n        n_outliers = 0\n        pr         = np.float64(0.24121921073456426)\n        pval       = np.float64(0.17593295791237318)\n        r          = np.float64(0.17612206752094678)\n        stats      = {'CI95': [array([-0.137694,  1.      ])], 'n': 30, 'p_val': np.float64(0.17593295791237318), 'power': np.float64(0.24121921073456426), ...}\n        x          = array([ 4.52499109,  4.42053181,  3.77897093, 12.        ,  3.25533028,\n        4.64956937,  2.95178623,  4.59135733, ...301762,  3.7024475 ,  1.67554352,  2.12366377,\n        5.62202531,  2.79728088,  3.49523787,  2.41851903,  2.18400827])\n        y          = array([ 7.41704397,  5.07326086,  7.25606067,  7.97867234,  4.4800941 ,\n       -8.        ,  4.38033491,  6.20286174, ...624519,  5.69186599,  4.04486339,  6.12552003,\n        6.69290489,  4.08347187,  6.45166315,  5.98813694,  5.14050216])\n/usr/local/lib/python3.10/dist-packages/pingouin/bayesian.py:326: in bayesfactor_pearson\n    _is_mpmath_installed(raise_error=True)\n        _is_mpmath_installed = <function _is_mpmath_installed at 0x7f69fbe79000>\n        alternative = 'greater'\n        betaln     = <ufunc 'betaln'>\n        bf10       = 0.3433076523837078\n        gamma      = <ufunc 'gamma'>\n        hyp2f1     = <ufunc 'hyp2f1'>\n        k          = 1.0\n        kappa      = 1.0\n        lbeta      = np.float64(0.0)\n        log_hyperterm = 0.4140108422539816\n        method     = 'ly'\n        n          = 30\n        r          = np.float64(0.17612206752094678)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nraise_error = True\n\n    def _is_mpmath_installed(raise_error=False):\n        \"\"\"Check if mpmath is installed.\"\"\"\n        try:\n>           import mpmath  # noqa\nE           ModuleNotFoundError: No module named 'mpmath'\n\nraise_error = True\n\n/usr/local/lib/python3.10/dist-packages/pingouin/utils.py:426: ModuleNotFoundError\n============================= slowest 10 durations =============================\n0.07s call     tests/test_contingency.py::TestContingency::test_chi2_independence\n0.05s call     tests/test_bayesian.py::TestBayesian::test_bayesfactor_binom\n0.02s call     tests/test_contingency.py::TestContingency::test_dichotomous_crosstab\n0.02s call     tests/test_contingency.py::TestContingency::test_chi2_mcnemar\n0.02s call     tests/test_bayesian.py::TestBayesian::test_bayesfactor_ttest\n0.01s call     tests/test_circular.py::TestCircular::test_helper_angles\n\n(4 durations < 0.005s hidden.  Use -vv to show these durations.)\n=========================== short test summary info ============================\nFAILED tests/test_bayesian.py::TestBayesian::test_bayesfactor_pearson - Modul...\nFAILED tests/test_correlation.py::TestCorrelation::test_corr - ModuleNotFound...\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 2 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n========================= 2 failed, 15 passed in 3.51s =========================\n",
    "stderr": "",
    "execution_time": 4.184059381484985
  }
]