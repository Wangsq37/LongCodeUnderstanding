## Project Information
Project Name: repo_to_process
Language: Python

## Project Structure
```
repo_to_process/
├── .basedpyright/
│   └── baseline.json
├── .ci/
│   └── hack-intel-cl-into-conda-env.sh
├── .github/
│   ├── ISSUE_TEMPLATE/
│   │   ├── bug_report.md
│   │   ├── config.yml
│   │   └── feature_request.md
│   ├── workflows/
│   │   ├── autopush.yml
│   │   ├── ci.yml
│   │   └── wheels.yml
│   └── dependabot.yml
├── contrib/
│   ├── fortran-to-opencl/
│   │   ├── README
│   │   └── translate.py
│   ├── cldis.py
│   └── pyopencl.vim
├── doc/
│   ├── .gitignore
│   ├── algorithm.rst
│   ├── array.rst
│   ├── conf.py
│   ├── howto.rst
│   ├── index.rst
│   ├── make_constants.py
│   ├── Makefile
│   ├── misc.rst
│   ├── runtime.rst
│   ├── runtime_const.rst
│   ├── runtime_gl.rst
│   ├── runtime_memory.rst
│   ├── runtime_platform.rst
│   ├── runtime_program.rst
│   ├── runtime_queue.rst
│   ├── subst.rst
│   ├── tools.rst
│   ├── types.rst
│   └── upload-docs.sh
│       └── ... (15 more files)
├── examples/
│   ├── .gitignore
│   ├── black-hole-accretion.py
│   ├── demo-struct-reduce.py
│   ├── demo.py
│   ├── demo_array.py
│   ├── demo_array_svm.py
│   ├── demo_elementwise.py
│   ├── demo_elementwise_complex.py
│   ├── demo_mandelbrot.py
│   ├── demo_meta_codepy.py
│   ├── demo_meta_template.py
│   ├── dump-performance.py
│   ├── dump-properties.py
│   ├── gl_interop_demo.py
│   ├── gl_particle_animation.py
│   ├── image_filters_using_image2d_t.py
│   ├── ipython-demo.ipynb
│   ├── median-filter.py
│   ├── n-body.py
│   ├── narray.py
│   ├── noisyImage.jpg
│   ├── pi-monte-carlo.py
│   ├── svm.py
│   └── transpose.py
│       └── ... (19 more files)
├── pyopencl/
│   ├── characterize/
│   │   ├── __init__.py
│   │   └── performance.py
│   ├── cl/
│   │   ├── pyopencl-random123/
│   │   │   ├── array.h
│   │   │   ├── openclfeatures.h
│   │   │   ├── philox.cl
│   │   │   └── threefry.cl
│   │   ├── pyopencl-airy.cl
│   │   ├── pyopencl-bessel-j-complex.cl
│   │   ├── pyopencl-bessel-j.cl
│   │   ├── pyopencl-bessel-y.cl
│   │   ├── pyopencl-complex.h
│   │   ├── pyopencl-eval-tbl.cl
│   │   └── pyopencl-hankel-complex.cl
│   │       └── ... (2 more files)
│   ├── compyte/
│   ├── __init__.py
│   ├── _cl.pyi
│   ├── _cluda.py
│   ├── _monkeypatch.py
│   ├── _mymako.py
│   ├── algorithm.py
│   ├── array.py
│   ├── bitonic_sort.py
│   ├── bitonic_sort_templates.py
│   ├── cache.py
│   ├── capture_call.py
│   ├── clmath.py
│   ├── clrandom.py
│   ├── cltypes.py
│   ├── elementwise.py
│   ├── invoker.py
│   ├── ipython_ext.py
│   ├── py.typed
│   ├── reduction.py
│   ├── scan.py
│   ├── tools.py
│   ├── typing.py
│   └── version.py
│       └── ... (18 more files)
├── scripts/
│   ├── build-ocl-macos.sh
│   ├── build-ocl-windows.sh
│   └── build-ocl.sh
├── src/
│   ├── bitlog.cpp
│   ├── bitlog.hpp
│   ├── clinfo_ext.h
│   ├── mempool.hpp
│   ├── pyopencl_ext.h
│   ├── tools.hpp
│   ├── wrap_cl.cpp
│   ├── wrap_cl.hpp
│   ├── wrap_cl_part_1.cpp
│   ├── wrap_cl_part_2.cpp
│   ├── wrap_constants.cpp
│   ├── wrap_helpers.hpp
│   └── wrap_mempool.cpp
│       └── ... (8 more files)
├── stubgen/
│   └── stubgen.py
├── test/
│   ├── add-vectors-32.spv
│   ├── add-vectors-64.spv
│   ├── empty-header.h
│   ├── test_algorithm.py
│   ├── test_array.py
│   ├── test_arrays_in_structs.py
│   ├── test_clmath.py
│   ├── test_clrandom.py
│   ├── test_enqueue_copy.py
│   └── test_wrapper.py
│       └── ... (5 more files)
├── .conda-ci-build-configure.sh
├── .editorconfig
├── .gitignore
├── .gitlab-ci.yml
├── .gitmodules
├── .test-conda-env-py3.yml
├── CITATION.cff
├── CMakeLists.txt
├── LICENSE
├── pyproject.toml
└── README.rst
    └── ... (6 more files)
```

## Your Task (Phase 1: Environment Setup)
Your first task is to set up the environment and make `pytest` runnable.
1.  Find and install dependencies.
2.  Run `pytest`.

If `pytest` runs and collects tests (even with test failures), the next step will be to trace call chains. If you cannot make it run, declare failure.
