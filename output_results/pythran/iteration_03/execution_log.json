[
  {
    "command": "pip install gast",
    "success": true,
    "stdout": "Looking in indexes: https://repo.huaweicloud.com/repository/pypi/simple/\nCollecting gast\n  Using cached https://repo.huaweicloud.com/repository/pypi/packages/a3/61/8001b38461d751cd1a0c3a6ae84346796a5758123f3ed97a1b121dfbf4f3/gast-0.6.0-py3-none-any.whl (21 kB)\nInstalling collected packages: gast\nSuccessfully installed gast-0.6.0\n",
    "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.\n",
    "execution_time": 0.7103569507598877
  },
  {
    "command": "pytest",
    "success": false,
    "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.4.1, pluggy-1.6.0\nrootdir: /app/repo_to_process\nconfigfile: pyproject.toml\ncollected 0 items / 58 errors\n\n==================================== ERRORS ====================================\n_______________ ERROR collecting pythran/tests/test_advanced.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_advanced.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_annotations.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_annotations.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_array.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_array.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_base.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_base.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_bisect.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_bisect.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_blas.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_blas.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_cases.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_cases.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_complex.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_complex.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_conversion.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_conversion.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_copperhead.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_copperhead.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_cython.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_cython.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_dict.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_dict.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_______________ ERROR collecting pythran/tests/test_distutils.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_distutils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_euler.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_euler.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_______________ ERROR collecting pythran/tests/test_exception.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_exception.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_file.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_file.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_format.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_format.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_gwebb.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_gwebb.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________________ ERROR collecting pythran/tests/test_icc.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_icc.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_import_all.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_import_all.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_ipython.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_ipython.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_______________ ERROR collecting pythran/tests/test_itertools.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_itertools.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_list.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_list.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_math.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_math.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n___________ ERROR collecting pythran/tests/test_named_parameters.py ____________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_named_parameters.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_ndarray.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_ndarray.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n___________ ERROR collecting pythran/tests/test_nested_functions.py ____________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_nested_functions.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_nogil.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_nogil.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_none.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_none.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n___________ ERROR collecting pythran/tests/test_normalize_methods.py ___________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_normalize_methods.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________ ERROR collecting pythran/tests/test_numpy_broadcasting.py ___________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_broadcasting.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_______________ ERROR collecting pythran/tests/test_numpy_fft.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_fft.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_numpy_func0.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_func0.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_numpy_func1.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_func1.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_numpy_func2.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_func2.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_numpy_func3.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_func3.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_____________ ERROR collecting pythran/tests/test_numpy_linalg.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_linalg.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_____________ ERROR collecting pythran/tests/test_numpy_random.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_random.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________ ERROR collecting pythran/tests/test_numpy_ufunc_binary.py ___________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_ufunc_binary.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n___________ ERROR collecting pythran/tests/test_numpy_ufunc_unary.py ___________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_numpy_ufunc_unary.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_openmp.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_openmp.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_______________ ERROR collecting pythran/tests/test_operator.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_operator.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_____________ ERROR collecting pythran/tests/test_optimizations.py _____________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_optimizations.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________________ ERROR collecting pythran/tests/test_os.py ___________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_os.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_random.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_random.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________________ ERROR collecting pythran/tests/test_rec.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_rec.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_rosetta.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_rosetta.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_scipy.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_scipy.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________________ ERROR collecting pythran/tests/test_set.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_set.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_slice.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_slice.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_spec_parser.py ______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_spec_parser.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________________ ERROR collecting pythran/tests/test_str.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_str.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n______________ ERROR collecting pythran/tests/test_submodules.py _______________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_submodules.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_time.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_time.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_typing.py _________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_typing.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n__________ ERROR collecting pythran/tests/test_user_defined_import.py __________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_user_defined_import.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n________________ ERROR collecting pythran/tests/test_version.py ________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_version.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n_________________ ERROR collecting pythran/tests/test_xdoc.py __________________\nImportError while importing test module '/app/repo_to_process/pythran/tests/test_xdoc.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\npythran/tests/__init__.py:27: in <module>\n    from pythran import compile_pythrancode, spec_parser, load_specfile, frontend\npythran/__init__.py:127: in __getattr__\n    import pythran.toolchain\npythran/toolchain.py:6: in <module>\n    from pythran.backend import Cxx, Python\npythran/backend.py:7: in <module>\n    from pythran.analyses import LocalNodeDeclarations, GlobalDeclarations, Scope\npythran/analyses/__init__.py:12: in <module>\n    from .aliases import Aliases, StrictAliases, InterproceduralAliases\npythran/analyses/aliases.py:6: in <module>\n    from pythran.tables import functions, methods, MODULES\npythran/tables.py:4779: in <module>\n    import beniget\nE   ModuleNotFoundError: No module named 'beniget'\n=========================== short test summary info ============================\nERROR pythran/tests/test_advanced.py\nERROR pythran/tests/test_annotations.py\nERROR pythran/tests/test_array.py\nERROR pythran/tests/test_base.py\nERROR pythran/tests/test_bisect.py\nERROR pythran/tests/test_blas.py\nERROR pythran/tests/test_cases.py\nERROR pythran/tests/test_complex.py\nERROR pythran/tests/test_conversion.py\nERROR pythran/tests/test_copperhead.py\nERROR pythran/tests/test_cython.py\nERROR pythran/tests/test_dict.py\nERROR pythran/tests/test_distutils.py\nERROR pythran/tests/test_euler.py\nERROR pythran/tests/test_exception.py\nERROR pythran/tests/test_file.py\nERROR pythran/tests/test_format.py\nERROR pythran/tests/test_gwebb.py\nERROR pythran/tests/test_icc.py\nERROR pythran/tests/test_import_all.py\nERROR pythran/tests/test_ipython.py\nERROR pythran/tests/test_itertools.py\nERROR pythran/tests/test_list.py\nERROR pythran/tests/test_math.py\nERROR pythran/tests/test_named_parameters.py\nERROR pythran/tests/test_ndarray.py\nERROR pythran/tests/test_nested_functions.py\nERROR pythran/tests/test_nogil.py\nERROR pythran/tests/test_none.py\nERROR pythran/tests/test_normalize_methods.py\nERROR pythran/tests/test_numpy_broadcasting.py\nERROR pythran/tests/test_numpy_fft.py\nERROR pythran/tests/test_numpy_func0.py\nERROR pythran/tests/test_numpy_func1.py\nERROR pythran/tests/test_numpy_func2.py\nERROR pythran/tests/test_numpy_func3.py\nERROR pythran/tests/test_numpy_linalg.py\nERROR pythran/tests/test_numpy_random.py\nERROR pythran/tests/test_numpy_ufunc_binary.py\nERROR pythran/tests/test_numpy_ufunc_unary.py\nERROR pythran/tests/test_openmp.py\nERROR pythran/tests/test_operator.py\nERROR pythran/tests/test_optimizations.py\nERROR pythran/tests/test_os.py\nERROR pythran/tests/test_random.py\nERROR pythran/tests/test_rec.py\nERROR pythran/tests/test_rosetta.py\nERROR pythran/tests/test_scipy.py\nERROR pythran/tests/test_set.py\nERROR pythran/tests/test_slice.py\nERROR pythran/tests/test_spec_parser.py\nERROR pythran/tests/test_str.py\nERROR pythran/tests/test_submodules.py\nERROR pythran/tests/test_time.py\nERROR pythran/tests/test_typing.py\nERROR pythran/tests/test_user_defined_import.py\nERROR pythran/tests/test_version.py\nERROR pythran/tests/test_xdoc.py\n!!!!!!!!!!!!!!!!!!! Interrupted: 58 errors during collection !!!!!!!!!!!!!!!!!!!\n============================= 58 errors in 21.16s ==============================\n",
    "stderr": "",
    "execution_time": 21.366082429885864
  }
]