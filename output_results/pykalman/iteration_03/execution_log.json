[
  {
    "command": "pytest",
    "success": true,
    "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.4.1, pluggy-1.6.0\nrootdir: /app/repo_to_process\nconfigfile: pyproject.toml\ncollected 37 items\n\npykalman/sqrt/tests/test_unscented.py ......                             [ 16%]\npykalman/tests/test_standard.py .....................                    [ 72%]\npykalman/tests/test_unscented.py ..........                              [100%]\n--- Writing function-level test call chains report to report_functions.jsonl ---\nSuccessfully wrote 37 records to report_functions.jsonl\n\n--- Writing aggregated file-level test call chains report to report_files.jsonl ---\nSuccessfully wrote 3 records to report_files.jsonl\n\n--- End of Reports ---\n\n\n=============================== warnings summary ===============================\npykalman/tests/test_standard.py: 7989 warnings\n  /app/repo_to_process/pykalman/standard.py:178: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n    loglikelihoods[t] = log_multivariate_normal_density(\n\npykalman/tests/test_standard.py::TestKalmanFilter::test_kalman_fit[BiermanKalmanFilter]\npykalman/tests/test_standard.py::TestKalmanFilter::test_kalman_fit[CholeskyKalmanFilter]\n  /app/repo_to_process/pykalman/tests/test_standard.py:149: UserWarning: transition_offsets has 2 dimensions now; after fitting, it will have dimension 1\n    kf.em(X=data.observations[0:n_timesteps], n_iter=1)\n\npykalman/tests/test_standard.py::TestKalmanFilter::test_kalman_pickle[KalmanFilter]\npykalman/tests/test_standard.py::TestKalmanFilter::test_kalman_pickle[BiermanKalmanFilter]\npykalman/tests/test_standard.py::TestKalmanFilter::test_kalman_pickle[CholeskyKalmanFilter]\n  /app/repo_to_process/pykalman/tests/test_standard.py:202: UserWarning: transition_offsets has 2 dimensions now; after fitting, it will have dimension 1\n    kf = kf.em(X, n_iter=5)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n====================== 37 passed, 7994 warnings in 43.87s ======================\n",
    "stderr": "",
    "execution_time": 44.20953154563904
  }
]